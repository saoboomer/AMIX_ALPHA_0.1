{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dV3bI3NOD8bfMzaIniMaFGy/nn8=","exportNames":["*"]}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":38,"index":79}}],"key":"7cELTg6ciMT+RtB4Wg9hRhcLwZA=","exportNames":["*"]}},{"name":"./storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":80},"end":{"line":3,"column":40,"index":120}}],"key":"3rLtLV8J3gSw9c8Ep8Wpc3w/Yxg=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AmiXAnalytics = void 0;\n  var _Platform = _interopRequireDefault(require(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _crypto = require(_dependencyMap[2], \"./crypto\");\n  var _storage = require(_dependencyMap[3], \"./storage\");\n  class AmiXAnalytics {\n    static analyticsUUID = null;\n    static lastHeartbeat = null;\n    static heartbeatInterval = 1000 * 60 * 60; // 1 hour\n    static isInitialized = false;\n    static async initialize() {\n      try {\n        if (this.isInitialized) return;\n        const analyticsOptIn = await _storage.AmiXStorage.getSecurely('analytics_opt_in');\n        if (!analyticsOptIn) {\n          this.isInitialized = true;\n          return; // User has not opted in\n        }\n\n        // Get or generate analytics UUID (separate from identity)\n        let uuid = await _storage.AmiXStorage.getSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID);\n        if (!uuid) {\n          uuid = await this.generateAnalyticsUUID();\n          await _storage.AmiXStorage.storeSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID, uuid);\n          await _storage.AmiXStorage.storeSecurely('analytics_uuid_created', Date.now());\n        } else {\n          // Check if UUID should be rotated (monthly)\n          const created = await _storage.AmiXStorage.getSecurely('analytics_uuid_created');\n          if (created && Date.now() - created > 30 * 24 * 60 * 60 * 1000) {\n            uuid = await this.generateAnalyticsUUID();\n            await _storage.AmiXStorage.storeSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID, uuid);\n            await _storage.AmiXStorage.storeSecurely('analytics_uuid_created', Date.now());\n          }\n        }\n        this.analyticsUUID = uuid;\n        this.sendHeartbeat();\n\n        // Set up periodic heartbeats\n        setInterval(() => {\n          this.sendHeartbeat();\n        }, this.heartbeatInterval);\n        this.isInitialized = true;\n      } catch (error) {\n        console.error('Analytics initialization failed:', error);\n      }\n    }\n    static async generateAnalyticsUUID() {\n      // Generate a cryptographically secure UUID for analytics (unlinked to identity)\n      return await _crypto.AmiXCrypto.generateSecureUUID();\n    }\n    static async sendHeartbeat() {\n      if (!this.analyticsUUID) {\n        return; // Analytics not enabled\n      }\n\n      // Throttle heartbeats\n      if (this.lastHeartbeat && Date.now() - this.lastHeartbeat < this.heartbeatInterval) {\n        return;\n      }\n      try {\n        const deviceType = _Platform.default.select({\n          ios: 'iOS',\n          android: 'Android',\n          web: 'Web',\n          default: 'Desktop'\n        });\n\n        // Minimal payload - no PII, no device identifiers\n        const payload = {\n          uuid: this.analyticsUUID,\n          device_type: deviceType,\n          app_version: '1.0.0',\n          // In production: get from app config\n          timestamp: Date.now()\n          // No IP address, no device ID, no user identifiers\n        };\n\n        // Add client-side IP obfuscation\n        const obfuscatedPayload = await this.obfuscatePayload(payload);\n        const response = await fetch('/api/analytics/heartbeat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Analytics-Version': '1.0'\n          },\n          body: JSON.stringify(obfuscatedPayload)\n        });\n        if (response.ok) {\n          this.lastHeartbeat = Date.now();\n        }\n      } catch (error) {\n        // Silently fail - analytics should never impact app functionality\n        console.debug('Analytics heartbeat failed:', error);\n      }\n    }\n    static async obfuscatePayload(payload) {\n      try {\n        // Add random noise to timestamp to prevent correlation\n        const noise = Math.floor(Math.random() * 60000); // Â±30 seconds\n        const obfuscatedPayload = {\n          ...payload,\n          timestamp: payload.timestamp + noise,\n          // Add random padding to prevent size-based fingerprinting\n          padding: await this.generateRandomPadding()\n        };\n        return obfuscatedPayload;\n      } catch (error) {\n        // Return original payload if obfuscation fails\n        return payload;\n      }\n    }\n    static async generateRandomPadding() {\n      // Generate random padding to prevent size-based fingerprinting\n      const length = Math.floor(Math.random() * 100) + 50;\n      const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      let result = '';\n      for (let i = 0; i < length; i++) {\n        result += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return result;\n    }\n    static async updateOptInStatus(optIn) {\n      try {\n        await _storage.AmiXStorage.storeSecurely('analytics_opt_in', optIn);\n        if (optIn) {\n          // User opted in - initialize analytics\n          await this.initialize();\n        } else {\n          // User opted out - clean up\n          this.analyticsUUID = null;\n          this.lastHeartbeat = null;\n          this.isInitialized = false;\n          await _storage.AmiXStorage.storeSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID, null);\n          await _storage.AmiXStorage.storeSecurely('analytics_uuid_created', null);\n\n          // Send final opt-out signal\n          await this.sendOptOutSignal();\n        }\n      } catch (error) {\n        console.error('Failed to update analytics opt-in status:', error);\n      }\n    }\n    static async sendOptOutSignal() {\n      try {\n        // Send a final signal to indicate user opted out\n        const payload = {\n          action: 'opt_out',\n          timestamp: Date.now()\n          // No UUID or identifying information\n        };\n        await fetch('/api/analytics/opt-out', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      } catch (error) {\n        // Silently fail\n        console.debug('Opt-out signal failed:', error);\n      }\n    }\n    static async exportAnalyticsData() {\n      try {\n        // Export analytics data for GDPR compliance\n        const analyticsData = {\n          optInStatus: await _storage.AmiXStorage.getSecurely('analytics_opt_in'),\n          currentUUID: await _storage.AmiXStorage.getSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID),\n          uuidCreated: await _storage.AmiXStorage.getSecurely('analytics_uuid_created'),\n          lastHeartbeat: this.lastHeartbeat,\n          exportTimestamp: Date.now()\n        };\n        return analyticsData;\n      } catch (error) {\n        console.error('Failed to export analytics data:', error);\n        return null;\n      }\n    }\n    static async deleteAnalyticsData() {\n      try {\n        // Delete all analytics data for GDPR compliance\n        await _storage.AmiXStorage.storeSecurely('analytics_opt_in', false);\n        await _storage.AmiXStorage.storeSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID, null);\n        await _storage.AmiXStorage.storeSecurely('analytics_uuid_created', null);\n        this.analyticsUUID = null;\n        this.lastHeartbeat = null;\n        this.isInitialized = false;\n\n        // Send deletion request to server\n        await fetch('/api/analytics/delete', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            action: 'delete_all_data',\n            timestamp: Date.now()\n          })\n        });\n        return true;\n      } catch (error) {\n        console.error('Failed to delete analytics data:', error);\n        return false;\n      }\n    }\n\n    // Privacy-focused event tracking (opt-in only)\n    static async trackEvent(eventName, eventData = {}) {\n      try {\n        if (!this.analyticsUUID || !this.isInitialized) {\n          return; // Analytics not enabled\n        }\n\n        // Only track non-sensitive events\n        const allowedEvents = ['app_opened', 'message_sent', 'message_received', 'group_created', 'contact_added', 'backup_created', 'backup_restored'];\n        if (!allowedEvents.includes(eventName)) {\n          console.warn('Event tracking blocked for privacy:', eventName);\n          return;\n        }\n\n        // Sanitize event data - remove any potential PII\n        const sanitizedData = this.sanitizeEventData(eventData);\n        const eventPayload = {\n          uuid: this.analyticsUUID,\n          event: eventName,\n          data: sanitizedData,\n          timestamp: Date.now()\n        };\n        await fetch('/api/analytics/event', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(eventPayload)\n        });\n      } catch (error) {\n        // Silently fail\n        console.debug('Event tracking failed:', error);\n      }\n    }\n    static sanitizeEventData(data) {\n      // Remove any potentially identifying information\n      const sanitized = {\n        ...data\n      };\n\n      // Remove common PII fields\n      delete sanitized.email;\n      delete sanitized.phone;\n      delete sanitized.name;\n      delete sanitized.userId;\n      delete sanitized.deviceId;\n      delete sanitized.ipAddress;\n      delete sanitized.location;\n\n      // Only keep safe, aggregated data\n      const safeFields = ['count', 'type', 'duration', 'success'];\n      const result = {};\n      for (const field of safeFields) {\n        if (sanitized[field] !== undefined) {\n          result[field] = sanitized[field];\n        }\n      }\n      return result;\n    }\n\n    // Get analytics status for UI\n    static async getAnalyticsStatus() {\n      try {\n        const optIn = await _storage.AmiXStorage.getSecurely('analytics_opt_in');\n        const uuid = await _storage.AmiXStorage.getSecurely(_storage.AmiXStorage.STORAGE_KEYS.ANALYTICS_UUID);\n        const created = await _storage.AmiXStorage.getSecurely('analytics_uuid_created');\n        return {\n          isOptedIn: !!optIn,\n          hasUUID: !!uuid,\n          uuidCreated: created,\n          isInitialized: this.isInitialized\n        };\n      } catch (error) {\n        console.error('Failed to get analytics status:', error);\n        return {\n          isOptedIn: false,\n          hasUUID: false,\n          uuidCreated: null,\n          isInitialized: false\n        };\n      }\n    }\n  }\n  exports.AmiXAnalytics = AmiXAnalytics;\n});","lineCount":295,"map":[[8,2,2,0],[8,6,2,0,"_crypto"],[8,13,2,0],[8,16,2,0,"require"],[8,23,2,0],[8,24,2,0,"_dependencyMap"],[8,38,2,0],[9,2,3,0],[9,6,3,0,"_storage"],[9,14,3,0],[9,17,3,0,"require"],[9,24,3,0],[9,25,3,0,"_dependencyMap"],[9,39,3,0],[10,2,5,7],[10,8,5,13,"AmiXAnalytics"],[10,21,5,26],[10,22,5,27],[11,4,6,2],[11,11,6,9,"analyticsUUID"],[11,24,6,22],[11,27,6,25],[11,31,6,29],[12,4,7,2],[12,11,7,9,"lastHeartbeat"],[12,24,7,22],[12,27,7,25],[12,31,7,29],[13,4,8,2],[13,11,8,9,"heartbeatInterval"],[13,28,8,26],[13,31,8,29],[13,35,8,33],[13,38,8,36],[13,40,8,38],[13,43,8,41],[13,45,8,43],[13,46,8,44],[13,47,8,45],[14,4,9,2],[14,11,9,9,"isInitialized"],[14,24,9,22],[14,27,9,25],[14,32,9,30],[15,4,11,2],[15,17,11,15,"initialize"],[15,27,11,25,"initialize"],[15,28,11,25],[15,30,11,28],[16,6,12,4],[16,10,12,8],[17,8,13,6],[17,12,13,10],[17,16,13,14],[17,17,13,15,"isInitialized"],[17,30,13,28],[17,32,13,30],[18,8,15,6],[18,14,15,12,"analyticsOptIn"],[18,28,15,26],[18,31,15,29],[18,37,15,35,"AmiXStorage"],[18,57,15,46],[18,58,15,47,"getSecurely"],[18,69,15,58],[18,70,15,59],[18,88,15,77],[18,89,15,78],[19,8,16,6],[19,12,16,10],[19,13,16,11,"analyticsOptIn"],[19,27,16,25],[19,29,16,27],[20,10,17,8],[20,14,17,12],[20,15,17,13,"isInitialized"],[20,28,17,26],[20,31,17,29],[20,35,17,33],[21,10,18,8],[21,17,18,15],[21,18,18,16],[22,8,19,6],[24,8,21,6],[25,8,22,6],[25,12,22,10,"uuid"],[25,16,22,14],[25,19,22,17],[25,25,22,23,"AmiXStorage"],[25,45,22,34],[25,46,22,35,"getSecurely"],[25,57,22,46],[25,58,22,47,"AmiXStorage"],[25,78,22,58],[25,79,22,59,"STORAGE_KEYS"],[25,91,22,71],[25,92,22,72,"ANALYTICS_UUID"],[25,106,22,86],[25,107,22,87],[26,8,23,6],[26,12,23,10],[26,13,23,11,"uuid"],[26,17,23,15],[26,19,23,17],[27,10,24,8,"uuid"],[27,14,24,12],[27,17,24,15],[27,23,24,21],[27,27,24,25],[27,28,24,26,"generateAnalyticsUUID"],[27,49,24,47],[27,50,24,48],[27,51,24,49],[28,10,25,8],[28,16,25,14,"AmiXStorage"],[28,36,25,25],[28,37,25,26,"storeSecurely"],[28,50,25,39],[28,51,25,40,"AmiXStorage"],[28,71,25,51],[28,72,25,52,"STORAGE_KEYS"],[28,84,25,64],[28,85,25,65,"ANALYTICS_UUID"],[28,99,25,79],[28,101,25,81,"uuid"],[28,105,25,85],[28,106,25,86],[29,10,26,8],[29,16,26,14,"AmiXStorage"],[29,36,26,25],[29,37,26,26,"storeSecurely"],[29,50,26,39],[29,51,26,40],[29,75,26,64],[29,77,26,66,"Date"],[29,81,26,70],[29,82,26,71,"now"],[29,85,26,74],[29,86,26,75],[29,87,26,76],[29,88,26,77],[30,8,27,6],[30,9,27,7],[30,15,27,13],[31,10,28,8],[32,10,29,8],[32,16,29,14,"created"],[32,23,29,21],[32,26,29,24],[32,32,29,30,"AmiXStorage"],[32,52,29,41],[32,53,29,42,"getSecurely"],[32,64,29,53],[32,65,29,54],[32,89,29,78],[32,90,29,79],[33,10,30,8],[33,14,30,12,"created"],[33,21,30,19],[33,25,30,23,"Date"],[33,29,30,27],[33,30,30,28,"now"],[33,33,30,31],[33,34,30,32],[33,35,30,33],[33,38,30,36,"created"],[33,45,30,43],[33,48,30,46],[33,50,30,48],[33,53,30,51],[33,55,30,53],[33,58,30,56],[33,60,30,58],[33,63,30,61],[33,65,30,63],[33,68,30,66],[33,72,30,70],[33,74,30,72],[34,12,31,10,"uuid"],[34,16,31,14],[34,19,31,17],[34,25,31,23],[34,29,31,27],[34,30,31,28,"generateAnalyticsUUID"],[34,51,31,49],[34,52,31,50],[34,53,31,51],[35,12,32,10],[35,18,32,16,"AmiXStorage"],[35,38,32,27],[35,39,32,28,"storeSecurely"],[35,52,32,41],[35,53,32,42,"AmiXStorage"],[35,73,32,53],[35,74,32,54,"STORAGE_KEYS"],[35,86,32,66],[35,87,32,67,"ANALYTICS_UUID"],[35,101,32,81],[35,103,32,83,"uuid"],[35,107,32,87],[35,108,32,88],[36,12,33,10],[36,18,33,16,"AmiXStorage"],[36,38,33,27],[36,39,33,28,"storeSecurely"],[36,52,33,41],[36,53,33,42],[36,77,33,66],[36,79,33,68,"Date"],[36,83,33,72],[36,84,33,73,"now"],[36,87,33,76],[36,88,33,77],[36,89,33,78],[36,90,33,79],[37,10,34,8],[38,8,35,6],[39,8,37,6],[39,12,37,10],[39,13,37,11,"analyticsUUID"],[39,26,37,24],[39,29,37,27,"uuid"],[39,33,37,31],[40,8,38,6],[40,12,38,10],[40,13,38,11,"sendHeartbeat"],[40,26,38,24],[40,27,38,25],[40,28,38,26],[42,8,40,6],[43,8,41,6,"setInterval"],[43,19,41,17],[43,20,41,18],[43,26,41,24],[44,10,42,8],[44,14,42,12],[44,15,42,13,"sendHeartbeat"],[44,28,42,26],[44,29,42,27],[44,30,42,28],[45,8,43,6],[45,9,43,7],[45,11,43,9],[45,15,43,13],[45,16,43,14,"heartbeatInterval"],[45,33,43,31],[45,34,43,32],[46,8,45,6],[46,12,45,10],[46,13,45,11,"isInitialized"],[46,26,45,24],[46,29,45,27],[46,33,45,31],[47,6,46,4],[47,7,46,5],[47,8,46,6],[47,15,46,13,"error"],[47,20,46,18],[47,22,46,20],[48,8,47,6,"console"],[48,15,47,13],[48,16,47,14,"error"],[48,21,47,19],[48,22,47,20],[48,56,47,54],[48,58,47,56,"error"],[48,63,47,61],[48,64,47,62],[49,6,48,4],[50,4,49,2],[51,4,51,2],[51,17,51,15,"generateAnalyticsUUID"],[51,38,51,36,"generateAnalyticsUUID"],[51,39,51,36],[51,41,51,39],[52,6,52,4],[53,6,53,4],[53,13,53,11],[53,19,53,17,"AmiXCrypto"],[53,37,53,27],[53,38,53,28,"generateSecureUUID"],[53,56,53,46],[53,57,53,47],[53,58,53,48],[54,4,54,2],[55,4,56,2],[55,17,56,15,"sendHeartbeat"],[55,30,56,28,"sendHeartbeat"],[55,31,56,28],[55,33,56,31],[56,6,57,4],[56,10,57,8],[56,11,57,9],[56,15,57,13],[56,16,57,14,"analyticsUUID"],[56,29,57,27],[56,31,57,29],[57,8,58,6],[57,15,58,13],[57,16,58,14],[58,6,59,4],[60,6,61,4],[61,6,62,4],[61,10,62,8],[61,14,62,12],[61,15,62,13,"lastHeartbeat"],[61,28,62,26],[61,32,62,30,"Date"],[61,36,62,34],[61,37,62,35,"now"],[61,40,62,38],[61,41,62,39],[61,42,62,40],[61,45,62,43],[61,49,62,47],[61,50,62,48,"lastHeartbeat"],[61,63,62,61],[61,66,62,64],[61,70,62,68],[61,71,62,69,"heartbeatInterval"],[61,88,62,86],[61,90,62,88],[62,8,63,6],[63,6,64,4],[64,6,66,4],[64,10,66,8],[65,8,67,6],[65,14,67,12,"deviceType"],[65,24,67,22],[65,27,67,25,"Platform"],[65,44,67,33],[65,45,67,34,"select"],[65,51,67,40],[65,52,67,41],[66,10,68,8,"ios"],[66,13,68,11],[66,15,68,13],[66,20,68,18],[67,10,69,8,"android"],[67,17,69,15],[67,19,69,17],[67,28,69,26],[68,10,70,8,"web"],[68,13,70,11],[68,15,70,13],[68,20,70,18],[69,10,71,8,"default"],[69,17,71,15],[69,19,71,17],[70,8,72,6],[70,9,72,7],[70,10,72,8],[72,8,74,6],[73,8,75,6],[73,14,75,12,"payload"],[73,21,75,19],[73,24,75,22],[74,10,76,8,"uuid"],[74,14,76,12],[74,16,76,14],[74,20,76,18],[74,21,76,19,"analyticsUUID"],[74,34,76,32],[75,10,77,8,"device_type"],[75,21,77,19],[75,23,77,21,"deviceType"],[75,33,77,31],[76,10,78,8,"app_version"],[76,21,78,19],[76,23,78,21],[76,30,78,28],[77,10,78,30],[78,10,79,8,"timestamp"],[78,19,79,17],[78,21,79,19,"Date"],[78,25,79,23],[78,26,79,24,"now"],[78,29,79,27],[78,30,79,28],[79,10,80,8],[80,8,81,6],[80,9,81,7],[82,8,83,6],[83,8,84,6],[83,14,84,12,"obfuscatedPayload"],[83,31,84,29],[83,34,84,32],[83,40,84,38],[83,44,84,42],[83,45,84,43,"obfuscatePayload"],[83,61,84,59],[83,62,84,60,"payload"],[83,69,84,67],[83,70,84,68],[84,8,86,6],[84,14,86,12,"response"],[84,22,86,20],[84,25,86,23],[84,31,86,29,"fetch"],[84,36,86,34],[84,37,86,35],[84,63,86,61],[84,65,86,63],[85,10,87,8,"method"],[85,16,87,14],[85,18,87,16],[85,24,87,22],[86,10,88,8,"headers"],[86,17,88,15],[86,19,88,17],[87,12,89,10],[87,26,89,24],[87,28,89,26],[87,46,89,44],[88,12,90,10],[88,33,90,31],[88,35,90,33],[89,10,91,8],[89,11,91,9],[90,10,92,8,"body"],[90,14,92,12],[90,16,92,14,"JSON"],[90,20,92,18],[90,21,92,19,"stringify"],[90,30,92,28],[90,31,92,29,"obfuscatedPayload"],[90,48,92,46],[91,8,93,6],[91,9,93,7],[91,10,93,8],[92,8,95,6],[92,12,95,10,"response"],[92,20,95,18],[92,21,95,19,"ok"],[92,23,95,21],[92,25,95,23],[93,10,96,8],[93,14,96,12],[93,15,96,13,"lastHeartbeat"],[93,28,96,26],[93,31,96,29,"Date"],[93,35,96,33],[93,36,96,34,"now"],[93,39,96,37],[93,40,96,38],[93,41,96,39],[94,8,97,6],[95,6,98,4],[95,7,98,5],[95,8,98,6],[95,15,98,13,"error"],[95,20,98,18],[95,22,98,20],[96,8,99,6],[97,8,100,6,"console"],[97,15,100,13],[97,16,100,14,"debug"],[97,21,100,19],[97,22,100,20],[97,51,100,49],[97,53,100,51,"error"],[97,58,100,56],[97,59,100,57],[98,6,101,4],[99,4,102,2],[100,4,104,2],[100,17,104,15,"obfuscatePayload"],[100,33,104,31,"obfuscatePayload"],[100,34,104,32,"payload"],[100,41,104,39],[100,43,104,41],[101,6,105,4],[101,10,105,8],[102,8,106,6],[103,8,107,6],[103,14,107,12,"noise"],[103,19,107,17],[103,22,107,20,"Math"],[103,26,107,24],[103,27,107,25,"floor"],[103,32,107,30],[103,33,107,31,"Math"],[103,37,107,35],[103,38,107,36,"random"],[103,44,107,42],[103,45,107,43],[103,46,107,44],[103,49,107,47],[103,54,107,52],[103,55,107,53],[103,56,107,54],[103,57,107,55],[104,8,108,6],[104,14,108,12,"obfuscatedPayload"],[104,31,108,29],[104,34,108,32],[105,10,109,8],[105,13,109,11,"payload"],[105,20,109,18],[106,10,110,8,"timestamp"],[106,19,110,17],[106,21,110,19,"payload"],[106,28,110,26],[106,29,110,27,"timestamp"],[106,38,110,36],[106,41,110,39,"noise"],[106,46,110,44],[107,10,111,8],[108,10,112,8,"padding"],[108,17,112,15],[108,19,112,17],[108,25,112,23],[108,29,112,27],[108,30,112,28,"generateRandomPadding"],[108,51,112,49],[108,52,112,50],[109,8,113,6],[109,9,113,7],[110,8,115,6],[110,15,115,13,"obfuscatedPayload"],[110,32,115,30],[111,6,116,4],[111,7,116,5],[111,8,116,6],[111,15,116,13,"error"],[111,20,116,18],[111,22,116,20],[112,8,117,6],[113,8,118,6],[113,15,118,13,"payload"],[113,22,118,20],[114,6,119,4],[115,4,120,2],[116,4,122,2],[116,17,122,15,"generateRandomPadding"],[116,38,122,36,"generateRandomPadding"],[116,39,122,36],[116,41,122,39],[117,6,123,4],[118,6,124,4],[118,12,124,10,"length"],[118,18,124,16],[118,21,124,19,"Math"],[118,25,124,23],[118,26,124,24,"floor"],[118,31,124,29],[118,32,124,30,"Math"],[118,36,124,34],[118,37,124,35,"random"],[118,43,124,41],[118,44,124,42],[118,45,124,43],[118,48,124,46],[118,51,124,49],[118,52,124,50],[118,55,124,53],[118,57,124,55],[119,6,125,4],[119,12,125,10,"chars"],[119,17,125,15],[119,20,125,18],[119,84,125,82],[120,6,126,4],[120,10,126,8,"result"],[120,16,126,14],[120,19,126,17],[120,21,126,19],[121,6,127,4],[121,11,127,9],[121,15,127,13,"i"],[121,16,127,14],[121,19,127,17],[121,20,127,18],[121,22,127,20,"i"],[121,23,127,21],[121,26,127,24,"length"],[121,32,127,30],[121,34,127,32,"i"],[121,35,127,33],[121,37,127,35],[121,39,127,37],[122,8,128,6,"result"],[122,14,128,12],[122,18,128,16,"chars"],[122,23,128,21],[122,24,128,22,"charAt"],[122,30,128,28],[122,31,128,29,"Math"],[122,35,128,33],[122,36,128,34,"floor"],[122,41,128,39],[122,42,128,40,"Math"],[122,46,128,44],[122,47,128,45,"random"],[122,53,128,51],[122,54,128,52],[122,55,128,53],[122,58,128,56,"chars"],[122,63,128,61],[122,64,128,62,"length"],[122,70,128,68],[122,71,128,69],[122,72,128,70],[123,6,129,4],[124,6,130,4],[124,13,130,11,"result"],[124,19,130,17],[125,4,131,2],[126,4,133,2],[126,17,133,15,"updateOptInStatus"],[126,34,133,32,"updateOptInStatus"],[126,35,133,33,"optIn"],[126,40,133,38],[126,42,133,40],[127,6,134,4],[127,10,134,8],[128,8,135,6],[128,14,135,12,"AmiXStorage"],[128,34,135,23],[128,35,135,24,"storeSecurely"],[128,48,135,37],[128,49,135,38],[128,67,135,56],[128,69,135,58,"optIn"],[128,74,135,63],[128,75,135,64],[129,8,137,6],[129,12,137,10,"optIn"],[129,17,137,15],[129,19,137,17],[130,10,138,8],[131,10,139,8],[131,16,139,14],[131,20,139,18],[131,21,139,19,"initialize"],[131,31,139,29],[131,32,139,30],[131,33,139,31],[132,8,140,6],[132,9,140,7],[132,15,140,13],[133,10,141,8],[134,10,142,8],[134,14,142,12],[134,15,142,13,"analyticsUUID"],[134,28,142,26],[134,31,142,29],[134,35,142,33],[135,10,143,8],[135,14,143,12],[135,15,143,13,"lastHeartbeat"],[135,28,143,26],[135,31,143,29],[135,35,143,33],[136,10,144,8],[136,14,144,12],[136,15,144,13,"isInitialized"],[136,28,144,26],[136,31,144,29],[136,36,144,34],[137,10,145,8],[137,16,145,14,"AmiXStorage"],[137,36,145,25],[137,37,145,26,"storeSecurely"],[137,50,145,39],[137,51,145,40,"AmiXStorage"],[137,71,145,51],[137,72,145,52,"STORAGE_KEYS"],[137,84,145,64],[137,85,145,65,"ANALYTICS_UUID"],[137,99,145,79],[137,101,145,81],[137,105,145,85],[137,106,145,86],[138,10,146,8],[138,16,146,14,"AmiXStorage"],[138,36,146,25],[138,37,146,26,"storeSecurely"],[138,50,146,39],[138,51,146,40],[138,75,146,64],[138,77,146,66],[138,81,146,70],[138,82,146,71],[140,10,148,8],[141,10,149,8],[141,16,149,14],[141,20,149,18],[141,21,149,19,"sendOptOutSignal"],[141,37,149,35],[141,38,149,36],[141,39,149,37],[142,8,150,6],[143,6,151,4],[143,7,151,5],[143,8,151,6],[143,15,151,13,"error"],[143,20,151,18],[143,22,151,20],[144,8,152,6,"console"],[144,15,152,13],[144,16,152,14,"error"],[144,21,152,19],[144,22,152,20],[144,65,152,63],[144,67,152,65,"error"],[144,72,152,70],[144,73,152,71],[145,6,153,4],[146,4,154,2],[147,4,156,2],[147,17,156,15,"sendOptOutSignal"],[147,33,156,31,"sendOptOutSignal"],[147,34,156,31],[147,36,156,34],[148,6,157,4],[148,10,157,8],[149,8,158,6],[150,8,159,6],[150,14,159,12,"payload"],[150,21,159,19],[150,24,159,22],[151,10,160,8,"action"],[151,16,160,14],[151,18,160,16],[151,27,160,25],[152,10,161,8,"timestamp"],[152,19,161,17],[152,21,161,19,"Date"],[152,25,161,23],[152,26,161,24,"now"],[152,29,161,27],[152,30,161,28],[153,10,162,8],[154,8,163,6],[154,9,163,7],[155,8,165,6],[155,14,165,12,"fetch"],[155,19,165,17],[155,20,165,18],[155,44,165,42],[155,46,165,44],[156,10,166,8,"method"],[156,16,166,14],[156,18,166,16],[156,24,166,22],[157,10,167,8,"headers"],[157,17,167,15],[157,19,167,17],[158,12,168,10],[158,26,168,24],[158,28,168,26],[159,10,169,8],[159,11,169,9],[160,10,170,8,"body"],[160,14,170,12],[160,16,170,14,"JSON"],[160,20,170,18],[160,21,170,19,"stringify"],[160,30,170,28],[160,31,170,29,"payload"],[160,38,170,36],[161,8,171,6],[161,9,171,7],[161,10,171,8],[162,6,172,4],[162,7,172,5],[162,8,172,6],[162,15,172,13,"error"],[162,20,172,18],[162,22,172,20],[163,8,173,6],[164,8,174,6,"console"],[164,15,174,13],[164,16,174,14,"debug"],[164,21,174,19],[164,22,174,20],[164,46,174,44],[164,48,174,46,"error"],[164,53,174,51],[164,54,174,52],[165,6,175,4],[166,4,176,2],[167,4,178,2],[167,17,178,15,"exportAnalyticsData"],[167,36,178,34,"exportAnalyticsData"],[167,37,178,34],[167,39,178,37],[168,6,179,4],[168,10,179,8],[169,8,180,6],[170,8,181,6],[170,14,181,12,"analyticsData"],[170,27,181,25],[170,30,181,28],[171,10,182,8,"optInStatus"],[171,21,182,19],[171,23,182,21],[171,29,182,27,"AmiXStorage"],[171,49,182,38],[171,50,182,39,"getSecurely"],[171,61,182,50],[171,62,182,51],[171,80,182,69],[171,81,182,70],[172,10,183,8,"currentUUID"],[172,21,183,19],[172,23,183,21],[172,29,183,27,"AmiXStorage"],[172,49,183,38],[172,50,183,39,"getSecurely"],[172,61,183,50],[172,62,183,51,"AmiXStorage"],[172,82,183,62],[172,83,183,63,"STORAGE_KEYS"],[172,95,183,75],[172,96,183,76,"ANALYTICS_UUID"],[172,110,183,90],[172,111,183,91],[173,10,184,8,"uuidCreated"],[173,21,184,19],[173,23,184,21],[173,29,184,27,"AmiXStorage"],[173,49,184,38],[173,50,184,39,"getSecurely"],[173,61,184,50],[173,62,184,51],[173,86,184,75],[173,87,184,76],[174,10,185,8,"lastHeartbeat"],[174,23,185,21],[174,25,185,23],[174,29,185,27],[174,30,185,28,"lastHeartbeat"],[174,43,185,41],[175,10,186,8,"exportTimestamp"],[175,25,186,23],[175,27,186,25,"Date"],[175,31,186,29],[175,32,186,30,"now"],[175,35,186,33],[175,36,186,34],[176,8,187,6],[176,9,187,7],[177,8,189,6],[177,15,189,13,"analyticsData"],[177,28,189,26],[178,6,190,4],[178,7,190,5],[178,8,190,6],[178,15,190,13,"error"],[178,20,190,18],[178,22,190,20],[179,8,191,6,"console"],[179,15,191,13],[179,16,191,14,"error"],[179,21,191,19],[179,22,191,20],[179,56,191,54],[179,58,191,56,"error"],[179,63,191,61],[179,64,191,62],[180,8,192,6],[180,15,192,13],[180,19,192,17],[181,6,193,4],[182,4,194,2],[183,4,196,2],[183,17,196,15,"deleteAnalyticsData"],[183,36,196,34,"deleteAnalyticsData"],[183,37,196,34],[183,39,196,37],[184,6,197,4],[184,10,197,8],[185,8,198,6],[186,8,199,6],[186,14,199,12,"AmiXStorage"],[186,34,199,23],[186,35,199,24,"storeSecurely"],[186,48,199,37],[186,49,199,38],[186,67,199,56],[186,69,199,58],[186,74,199,63],[186,75,199,64],[187,8,200,6],[187,14,200,12,"AmiXStorage"],[187,34,200,23],[187,35,200,24,"storeSecurely"],[187,48,200,37],[187,49,200,38,"AmiXStorage"],[187,69,200,49],[187,70,200,50,"STORAGE_KEYS"],[187,82,200,62],[187,83,200,63,"ANALYTICS_UUID"],[187,97,200,77],[187,99,200,79],[187,103,200,83],[187,104,200,84],[188,8,201,6],[188,14,201,12,"AmiXStorage"],[188,34,201,23],[188,35,201,24,"storeSecurely"],[188,48,201,37],[188,49,201,38],[188,73,201,62],[188,75,201,64],[188,79,201,68],[188,80,201,69],[189,8,203,6],[189,12,203,10],[189,13,203,11,"analyticsUUID"],[189,26,203,24],[189,29,203,27],[189,33,203,31],[190,8,204,6],[190,12,204,10],[190,13,204,11,"lastHeartbeat"],[190,26,204,24],[190,29,204,27],[190,33,204,31],[191,8,205,6],[191,12,205,10],[191,13,205,11,"isInitialized"],[191,26,205,24],[191,29,205,27],[191,34,205,32],[193,8,207,6],[194,8,208,6],[194,14,208,12,"fetch"],[194,19,208,17],[194,20,208,18],[194,43,208,41],[194,45,208,43],[195,10,209,8,"method"],[195,16,209,14],[195,18,209,16],[195,24,209,22],[196,10,210,8,"headers"],[196,17,210,15],[196,19,210,17],[197,12,211,10],[197,26,211,24],[197,28,211,26],[198,10,212,8],[198,11,212,9],[199,10,213,8,"body"],[199,14,213,12],[199,16,213,14,"JSON"],[199,20,213,18],[199,21,213,19,"stringify"],[199,30,213,28],[199,31,213,29],[200,12,214,10,"action"],[200,18,214,16],[200,20,214,18],[200,37,214,35],[201,12,215,10,"timestamp"],[201,21,215,19],[201,23,215,21,"Date"],[201,27,215,25],[201,28,215,26,"now"],[201,31,215,29],[201,32,215,30],[202,10,216,8],[202,11,216,9],[203,8,217,6],[203,9,217,7],[203,10,217,8],[204,8,219,6],[204,15,219,13],[204,19,219,17],[205,6,220,4],[205,7,220,5],[205,8,220,6],[205,15,220,13,"error"],[205,20,220,18],[205,22,220,20],[206,8,221,6,"console"],[206,15,221,13],[206,16,221,14,"error"],[206,21,221,19],[206,22,221,20],[206,56,221,54],[206,58,221,56,"error"],[206,63,221,61],[206,64,221,62],[207,8,222,6],[207,15,222,13],[207,20,222,18],[208,6,223,4],[209,4,224,2],[211,4,226,2],[212,4,227,2],[212,17,227,15,"trackEvent"],[212,27,227,25,"trackEvent"],[212,28,227,26,"eventName"],[212,37,227,35],[212,39,227,37,"eventData"],[212,48,227,46],[212,51,227,49],[212,52,227,50],[212,53,227,51],[212,55,227,53],[213,6,228,4],[213,10,228,8],[214,8,229,6],[214,12,229,10],[214,13,229,11],[214,17,229,15],[214,18,229,16,"analyticsUUID"],[214,31,229,29],[214,35,229,33],[214,36,229,34],[214,40,229,38],[214,41,229,39,"isInitialized"],[214,54,229,52],[214,56,229,54],[215,10,230,8],[215,17,230,15],[215,18,230,16],[216,8,231,6],[218,8,233,6],[219,8,234,6],[219,14,234,12,"allowedEvents"],[219,27,234,25],[219,30,234,28],[219,31,235,8],[219,43,235,20],[219,45,236,8],[219,59,236,22],[219,61,237,8],[219,79,237,26],[219,81,238,8],[219,96,238,23],[219,98,239,8],[219,113,239,23],[219,115,240,8],[219,131,240,24],[219,133,241,8],[219,150,241,25],[219,151,242,7],[220,8,244,6],[220,12,244,10],[220,13,244,11,"allowedEvents"],[220,26,244,24],[220,27,244,25,"includes"],[220,35,244,33],[220,36,244,34,"eventName"],[220,45,244,43],[220,46,244,44],[220,48,244,46],[221,10,245,8,"console"],[221,17,245,15],[221,18,245,16,"warn"],[221,22,245,20],[221,23,245,21],[221,60,245,58],[221,62,245,60,"eventName"],[221,71,245,69],[221,72,245,70],[222,10,246,8],[223,8,247,6],[225,8,249,6],[226,8,250,6],[226,14,250,12,"sanitizedData"],[226,27,250,25],[226,30,250,28],[226,34,250,32],[226,35,250,33,"sanitizeEventData"],[226,52,250,50],[226,53,250,51,"eventData"],[226,62,250,60],[226,63,250,61],[227,8,252,6],[227,14,252,12,"eventPayload"],[227,26,252,24],[227,29,252,27],[228,10,253,8,"uuid"],[228,14,253,12],[228,16,253,14],[228,20,253,18],[228,21,253,19,"analyticsUUID"],[228,34,253,32],[229,10,254,8,"event"],[229,15,254,13],[229,17,254,15,"eventName"],[229,26,254,24],[230,10,255,8,"data"],[230,14,255,12],[230,16,255,14,"sanitizedData"],[230,29,255,27],[231,10,256,8,"timestamp"],[231,19,256,17],[231,21,256,19,"Date"],[231,25,256,23],[231,26,256,24,"now"],[231,29,256,27],[231,30,256,28],[232,8,257,6],[232,9,257,7],[233,8,259,6],[233,14,259,12,"fetch"],[233,19,259,17],[233,20,259,18],[233,42,259,40],[233,44,259,42],[234,10,260,8,"method"],[234,16,260,14],[234,18,260,16],[234,24,260,22],[235,10,261,8,"headers"],[235,17,261,15],[235,19,261,17],[236,12,262,10],[236,26,262,24],[236,28,262,26],[237,10,263,8],[237,11,263,9],[238,10,264,8,"body"],[238,14,264,12],[238,16,264,14,"JSON"],[238,20,264,18],[238,21,264,19,"stringify"],[238,30,264,28],[238,31,264,29,"eventPayload"],[238,43,264,41],[239,8,265,6],[239,9,265,7],[239,10,265,8],[240,6,266,4],[240,7,266,5],[240,8,266,6],[240,15,266,13,"error"],[240,20,266,18],[240,22,266,20],[241,8,267,6],[242,8,268,6,"console"],[242,15,268,13],[242,16,268,14,"debug"],[242,21,268,19],[242,22,268,20],[242,46,268,44],[242,48,268,46,"error"],[242,53,268,51],[242,54,268,52],[243,6,269,4],[244,4,270,2],[245,4,272,2],[245,11,272,9,"sanitizeEventData"],[245,28,272,26,"sanitizeEventData"],[245,29,272,27,"data"],[245,33,272,31],[245,35,272,33],[246,6,273,4],[247,6,274,4],[247,12,274,10,"sanitized"],[247,21,274,19],[247,24,274,22],[248,8,274,24],[248,11,274,27,"data"],[249,6,274,32],[249,7,274,33],[251,6,276,4],[252,6,277,4],[252,13,277,11,"sanitized"],[252,22,277,20],[252,23,277,21,"email"],[252,28,277,26],[253,6,278,4],[253,13,278,11,"sanitized"],[253,22,278,20],[253,23,278,21,"phone"],[253,28,278,26],[254,6,279,4],[254,13,279,11,"sanitized"],[254,22,279,20],[254,23,279,21,"name"],[254,27,279,25],[255,6,280,4],[255,13,280,11,"sanitized"],[255,22,280,20],[255,23,280,21,"userId"],[255,29,280,27],[256,6,281,4],[256,13,281,11,"sanitized"],[256,22,281,20],[256,23,281,21,"deviceId"],[256,31,281,29],[257,6,282,4],[257,13,282,11,"sanitized"],[257,22,282,20],[257,23,282,21,"ipAddress"],[257,32,282,30],[258,6,283,4],[258,13,283,11,"sanitized"],[258,22,283,20],[258,23,283,21,"location"],[258,31,283,29],[260,6,285,4],[261,6,286,4],[261,12,286,10,"safeFields"],[261,22,286,20],[261,25,286,23],[261,26,286,24],[261,33,286,31],[261,35,286,33],[261,41,286,39],[261,43,286,41],[261,53,286,51],[261,55,286,53],[261,64,286,62],[261,65,286,63],[262,6,287,4],[262,12,287,10,"result"],[262,18,287,16],[262,21,287,19],[262,22,287,20],[262,23,287,21],[263,6,289,4],[263,11,289,9],[263,17,289,15,"field"],[263,22,289,20],[263,26,289,24,"safeFields"],[263,36,289,34],[263,38,289,36],[264,8,290,6],[264,12,290,10,"sanitized"],[264,21,290,19],[264,22,290,20,"field"],[264,27,290,25],[264,28,290,26],[264,33,290,31,"undefined"],[264,42,290,40],[264,44,290,42],[265,10,291,8,"result"],[265,16,291,14],[265,17,291,15,"field"],[265,22,291,20],[265,23,291,21],[265,26,291,24,"sanitized"],[265,35,291,33],[265,36,291,34,"field"],[265,41,291,39],[265,42,291,40],[266,8,292,6],[267,6,293,4],[268,6,295,4],[268,13,295,11,"result"],[268,19,295,17],[269,4,296,2],[271,4,298,2],[272,4,299,2],[272,17,299,15,"getAnalyticsStatus"],[272,35,299,33,"getAnalyticsStatus"],[272,36,299,33],[272,38,299,36],[273,6,300,4],[273,10,300,8],[274,8,301,6],[274,14,301,12,"optIn"],[274,19,301,17],[274,22,301,20],[274,28,301,26,"AmiXStorage"],[274,48,301,37],[274,49,301,38,"getSecurely"],[274,60,301,49],[274,61,301,50],[274,79,301,68],[274,80,301,69],[275,8,302,6],[275,14,302,12,"uuid"],[275,18,302,16],[275,21,302,19],[275,27,302,25,"AmiXStorage"],[275,47,302,36],[275,48,302,37,"getSecurely"],[275,59,302,48],[275,60,302,49,"AmiXStorage"],[275,80,302,60],[275,81,302,61,"STORAGE_KEYS"],[275,93,302,73],[275,94,302,74,"ANALYTICS_UUID"],[275,108,302,88],[275,109,302,89],[276,8,303,6],[276,14,303,12,"created"],[276,21,303,19],[276,24,303,22],[276,30,303,28,"AmiXStorage"],[276,50,303,39],[276,51,303,40,"getSecurely"],[276,62,303,51],[276,63,303,52],[276,87,303,76],[276,88,303,77],[277,8,305,6],[277,15,305,13],[278,10,306,8,"isOptedIn"],[278,19,306,17],[278,21,306,19],[278,22,306,20],[278,23,306,21,"optIn"],[278,28,306,26],[279,10,307,8,"hasUUID"],[279,17,307,15],[279,19,307,17],[279,20,307,18],[279,21,307,19,"uuid"],[279,25,307,23],[280,10,308,8,"uuidCreated"],[280,21,308,19],[280,23,308,21,"created"],[280,30,308,28],[281,10,309,8,"isInitialized"],[281,23,309,21],[281,25,309,23],[281,29,309,27],[281,30,309,28,"isInitialized"],[282,8,310,6],[282,9,310,7],[283,6,311,4],[283,7,311,5],[283,8,311,6],[283,15,311,13,"error"],[283,20,311,18],[283,22,311,20],[284,8,312,6,"console"],[284,15,312,13],[284,16,312,14,"error"],[284,21,312,19],[284,22,312,20],[284,55,312,53],[284,57,312,55,"error"],[284,62,312,60],[284,63,312,61],[285,8,313,6],[285,15,313,13],[286,10,314,8,"isOptedIn"],[286,19,314,17],[286,21,314,19],[286,26,314,24],[287,10,315,8,"hasUUID"],[287,17,315,15],[287,19,315,17],[287,24,315,22],[288,10,316,8,"uuidCreated"],[288,21,316,19],[288,23,316,21],[288,27,316,25],[289,10,317,8,"isInitialized"],[289,23,317,21],[289,25,317,23],[290,8,318,6],[290,9,318,7],[291,6,319,4],[292,4,320,2],[293,2,321,0],[294,2,321,1,"exports"],[294,9,321,1],[294,10,321,1,"AmiXAnalytics"],[294,23,321,1],[294,26,321,1,"AmiXAnalytics"],[294,39,321,1],[295,0,321,1],[295,3]],"functionMap":{"names":["<global>","AmiXAnalytics","AmiXAnalytics.initialize","setInterval$argument_0","AmiXAnalytics.generateAnalyticsUUID","AmiXAnalytics.sendHeartbeat","AmiXAnalytics.obfuscatePayload","AmiXAnalytics.generateRandomPadding","AmiXAnalytics.updateOptInStatus","AmiXAnalytics.sendOptOutSignal","AmiXAnalytics.exportAnalyticsData","AmiXAnalytics.deleteAnalyticsData","AmiXAnalytics.trackEvent","AmiXAnalytics.sanitizeEventData","AmiXAnalytics.getAnalyticsStatus"],"mappings":"AAA;OCI;ECM;kBC8B;ODE;GDM;EGE;GHG;EIE;GJ8C;EKE;GLgB;EME;GNS;EOE;GPqB;EQE;GRoB;ESE;GTgB;EUE;GV4B;EWG;GX2C;EYE;GZwB;EaG;GbqB"}},"type":"js/module"}]}