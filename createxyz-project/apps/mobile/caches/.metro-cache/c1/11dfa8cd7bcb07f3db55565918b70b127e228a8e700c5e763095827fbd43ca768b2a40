{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"expo-secure-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"BU2XtfznZ4PiVldqd/oueHCCaLo=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":69,"index":120}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":122},"end":{"line":3,"column":38,"index":160}}],"key":"7cELTg6ciMT+RtB4Wg9hRhcLwZA=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AmiXStorage = void 0;\n  var SecureStore = _interopRequireWildcard(require(_dependencyMap[1], \"expo-secure-store\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[2], \"@react-native-async-storage/async-storage\"));\n  var _crypto = require(_dependencyMap[3], \"./crypto\");\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\n  // AmiX Secure Storage - Production-grade implementation\n  // Uses Expo SecureStore for sensitive data, AsyncStorage for non-sensitive data\n\n  class AmiXStorage {\n    // Storage keys for different data types\n    static STORAGE_KEYS = {\n      // Sensitive data (stored in SecureStore)\n      IDENTITY_KEYS: 'amix_identity_keys',\n      RATCHET_STATES: 'amix_ratchet_states',\n      MESSAGES: 'amix_messages',\n      CONTACTS: 'amix_contacts',\n      GROUPS: 'amix_groups',\n      ANALYTICS_UUID: 'amix_analytics_uuid',\n      BACKUP_PASSPHRASE_HASH: 'amix_backup_passphrase_hash',\n      // Non-sensitive data (stored in AsyncStorage)\n      USER_PREFERENCES: 'amix_user_preferences',\n      UI_STATE: 'amix_ui_state',\n      CACHE_DATA: 'amix_cache_data',\n      APP_VERSION: 'amix_app_version'\n    };\n\n    // Initialize storage and check for migrations\n    static async initialize() {\n      try {\n        const appVersion = await this.getAppVersion();\n        const currentVersion = '1.0.0'; // Update this with each release\n\n        if (appVersion !== currentVersion) {\n          await this.performMigration(appVersion, currentVersion);\n          await this.setAppVersion(currentVersion);\n        }\n        return true;\n      } catch (error) {\n        console.error('Storage initialization failed:', error);\n        return false;\n      }\n    }\n\n    // Secure storage operations for sensitive data\n    static async storeSecurely(key, value) {\n      try {\n        const encryptedValue = await this.encryptForStorage(value);\n        await SecureStore.setItemAsync(key, encryptedValue);\n        return true;\n      } catch (error) {\n        console.error('Secure storage failed:', error);\n        return false;\n      }\n    }\n    static async getSecurely(key) {\n      try {\n        const encryptedValue = await SecureStore.getItemAsync(key);\n        if (!encryptedValue) return null;\n        return await this.decryptFromStorage(encryptedValue);\n      } catch (error) {\n        console.error('Secure retrieval failed:', error);\n        return null;\n      }\n    }\n    static async deleteSecurely(key) {\n      try {\n        await SecureStore.deleteItemAsync(key);\n        return true;\n      } catch (error) {\n        console.error('Secure deletion failed:', error);\n        return false;\n      }\n    }\n\n    // Regular storage operations for non-sensitive data\n    static async store(key, value) {\n      try {\n        await _asyncStorage.default.setItem(key, JSON.stringify(value));\n        return true;\n      } catch (error) {\n        console.error('Storage failed:', error);\n        return false;\n      }\n    }\n    static async get(key) {\n      try {\n        const value = await _asyncStorage.default.getItem(key);\n        return value ? JSON.parse(value) : null;\n      } catch (error) {\n        console.error('Retrieval failed:', error);\n        return null;\n      }\n    }\n    static async delete(key) {\n      try {\n        await _asyncStorage.default.removeItem(key);\n        return true;\n      } catch (error) {\n        console.error('Deletion failed:', error);\n        return false;\n      }\n    }\n\n    // Database encryption for storage\n    static async encryptForStorage(data) {\n      try {\n        // Generate a storage key from device-specific information\n        const storageKey = await this.getStorageKey();\n        const dataString = JSON.stringify(data);\n        const dataBytes = new TextEncoder().encode(dataString);\n\n        // Encrypt using AES-256-GCM equivalent (via tweetnacl)\n        const nonce = await _crypto.AmiXCrypto.generateRandomBytes(24);\n        const encrypted = await _crypto.AmiXCrypto.encryptMessage(dataString, {\n          chainKey: storageKey\n        });\n        return JSON.stringify({\n          encrypted: encrypted.ciphertext,\n          nonce: encrypted.nonce,\n          timestamp: Date.now()\n        });\n      } catch (error) {\n        throw new Error('Encryption failed: ' + error.message);\n      }\n    }\n    static async decryptFromStorage(encryptedData) {\n      try {\n        const data = JSON.parse(encryptedData);\n        const storageKey = await this.getStorageKey();\n        const decrypted = await _crypto.AmiXCrypto.decryptMessage({\n          ciphertext: data.encrypted,\n          nonce: data.nonce\n        }, {\n          chainKey: storageKey\n        });\n        return JSON.parse(decrypted);\n      } catch (error) {\n        throw new Error('Decryption failed: ' + error.message);\n      }\n    }\n\n    // Get device-specific storage key\n    static async getStorageKey() {\n      try {\n        // Use device ID or generate a persistent key\n        const deviceId = await SecureStore.getItemAsync('amix_device_id');\n        if (!deviceId) {\n          const newDeviceId = await _crypto.AmiXCrypto.generateSecureUUID();\n          await SecureStore.setItemAsync('amix_device_id', newDeviceId);\n          return newDeviceId;\n        }\n        return deviceId;\n      } catch (error) {\n        // Fallback to a default key (less secure but functional)\n        return 'amix_default_storage_key';\n      }\n    }\n\n    // Identity and key management\n    static async storeIdentityKeys(identityKeys) {\n      return await this.storeSecurely(this.STORAGE_KEYS.IDENTITY_KEYS, identityKeys);\n    }\n    static async getIdentityKeys() {\n      return await this.getSecurely(this.STORAGE_KEYS.IDENTITY_KEYS);\n    }\n    static async storeRatchetState(conversationId, ratchetState) {\n      const states = (await this.getSecurely(this.STORAGE_KEYS.RATCHET_STATES)) || {};\n      states[conversationId] = ratchetState;\n      return await this.storeSecurely(this.STORAGE_KEYS.RATCHET_STATES, states);\n    }\n    static async getRatchetState(conversationId) {\n      const states = (await this.getSecurely(this.STORAGE_KEYS.RATCHET_STATES)) || {};\n      return states[conversationId] || null;\n    }\n\n    // Message storage\n    static async storeMessage(conversationId, message) {\n      const messages = (await this.getSecurely(this.STORAGE_KEYS.MESSAGES)) || {};\n      if (!messages[conversationId]) {\n        messages[conversationId] = [];\n      }\n      messages[conversationId].push({\n        ...message,\n        id: await _crypto.AmiXCrypto.generateSecureUUID(),\n        timestamp: Date.now()\n      });\n      return await this.storeSecurely(this.STORAGE_KEYS.MESSAGES, messages);\n    }\n    static async getMessages(conversationId, limit = 50) {\n      const messages = (await this.getSecurely(this.STORAGE_KEYS.MESSAGES)) || {};\n      const conversationMessages = messages[conversationId] || [];\n      return conversationMessages.slice(-limit);\n    }\n\n    // Contact management\n    static async storeContact(contact) {\n      const contacts = (await this.getSecurely(this.STORAGE_KEYS.CONTACTS)) || {};\n      contacts[contact.amixId] = {\n        ...contact,\n        updatedAt: Date.now()\n      };\n      return await this.storeSecurely(this.STORAGE_KEYS.CONTACTS, contacts);\n    }\n    static async getContacts() {\n      return (await this.getSecurely(this.STORAGE_KEYS.CONTACTS)) || {};\n    }\n\n    // Group management\n    static async storeGroup(group) {\n      const groups = (await this.getSecurely(this.STORAGE_KEYS.GROUPS)) || {};\n      groups[group.id] = {\n        ...group,\n        updatedAt: Date.now()\n      };\n      return await this.storeSecurely(this.STORAGE_KEYS.GROUPS, groups);\n    }\n    static async getGroups() {\n      return (await this.getSecurely(this.STORAGE_KEYS.GROUPS)) || {};\n    }\n\n    // Secure backup and restore\n    static async createBackup(passphrase) {\n      try {\n        // Hash the passphrase\n        const passphraseHash = await _crypto.AmiXCrypto.generateSafetyNumber(passphrase, 'amix_backup');\n\n        // Collect all sensitive data\n        const backupData = {\n          identityKeys: await this.getIdentityKeys(),\n          ratchetStates: await this.getSecurely(this.STORAGE_KEYS.RATCHET_STATES),\n          messages: await this.getSecurely(this.STORAGE_KEYS.MESSAGES),\n          contacts: await this.getSecurely(this.STORAGE_KEYS.CONTACTS),\n          groups: await this.getSecurely(this.STORAGE_KEYS.GROUPS),\n          timestamp: Date.now(),\n          version: '1.0.0'\n        };\n\n        // Encrypt backup with passphrase\n        const backupString = JSON.stringify(backupData);\n        const backupKey = await _crypto.AmiXCrypto.deriveKey(new TextEncoder().encode(passphrase), 'amix_backup_key');\n        const encryptedBackup = await _crypto.AmiXCrypto.encryptMessage(backupString, {\n          chainKey: _crypto.AmiXCrypto.bytesToHex(backupKey)\n        });\n\n        // Store passphrase hash for verification\n        await this.storeSecurely(this.STORAGE_KEYS.BACKUP_PASSPHRASE_HASH, passphraseHash);\n        return {\n          encryptedData: encryptedBackup.ciphertext,\n          nonce: encryptedBackup.nonce,\n          timestamp: Date.now()\n        };\n      } catch (error) {\n        throw new Error('Backup creation failed: ' + error.message);\n      }\n    }\n    static async restoreBackup(encryptedBackup, passphrase) {\n      try {\n        // Verify passphrase\n        const storedHash = await this.getSecurely(this.STORAGE_KEYS.BACKUP_PASSPHRASE_HASH);\n        const inputHash = await _crypto.AmiXCrypto.generateSafetyNumber(passphrase, 'amix_backup');\n        if (storedHash !== inputHash) {\n          throw new Error('Invalid passphrase');\n        }\n\n        // Decrypt backup\n        const backupKey = await _crypto.AmiXCrypto.deriveKey(new TextEncoder().encode(passphrase), 'amix_backup_key');\n        const decryptedBackup = await _crypto.AmiXCrypto.decryptMessage({\n          ciphertext: encryptedBackup.encryptedData,\n          nonce: encryptedBackup.nonce\n        }, {\n          chainKey: _crypto.AmiXCrypto.bytesToHex(backupKey)\n        });\n        const backupData = JSON.parse(decryptedBackup);\n\n        // Restore all data\n        await this.storeIdentityKeys(backupData.identityKeys);\n        await this.storeSecurely(this.STORAGE_KEYS.RATCHET_STATES, backupData.ratchetStates);\n        await this.storeSecurely(this.STORAGE_KEYS.MESSAGES, backupData.messages);\n        await this.storeSecurely(this.STORAGE_KEYS.CONTACTS, backupData.contacts);\n        await this.storeSecurely(this.STORAGE_KEYS.GROUPS, backupData.groups);\n        return true;\n      } catch (error) {\n        throw new Error('Backup restoration failed: ' + error.message);\n      }\n    }\n\n    // Secure deletion\n    static async secureDelete() {\n      try {\n        // Delete all sensitive data\n        const keys = Object.values(this.STORAGE_KEYS);\n        for (const key of keys) {\n          await this.deleteSecurely(key);\n        }\n\n        // Clear non-sensitive data\n        await _asyncStorage.default.clear();\n        return true;\n      } catch (error) {\n        console.error('Secure deletion failed:', error);\n        return false;\n      }\n    }\n\n    // Database migration\n    static async performMigration(fromVersion, toVersion) {\n      try {\n        console.log(`Migrating from ${fromVersion} to ${toVersion}`);\n\n        // Add migration logic here as needed\n        // For now, just log the migration\n\n        return true;\n      } catch (error) {\n        console.error('Migration failed:', error);\n        return false;\n      }\n    }\n\n    // App version management\n    static async getAppVersion() {\n      return (await this.get(this.STORAGE_KEYS.APP_VERSION)) || '0.0.0';\n    }\n    static async setAppVersion(version) {\n      return await this.store(this.STORAGE_KEYS.APP_VERSION, version);\n    }\n\n    // Utility functions\n    static async getAllKeys() {\n      try {\n        return await _asyncStorage.default.getAllKeys();\n      } catch (error) {\n        console.error('Failed to get all keys:', error);\n        return [];\n      }\n    }\n    static async getStorageSize() {\n      try {\n        const keys = await this.getAllKeys();\n        let totalSize = 0;\n        for (const key of keys) {\n          const value = await _asyncStorage.default.getItem(key);\n          if (value) {\n            totalSize += value.length;\n          }\n        }\n        return totalSize;\n      } catch (error) {\n        console.error('Failed to calculate storage size:', error);\n        return 0;\n      }\n    }\n  }\n  exports.AmiXStorage = AmiXStorage;\n});","lineCount":360,"map":[[7,2,1,0],[7,6,1,0,"SecureStore"],[7,17,1,0],[7,20,1,0,"_interopRequireWildcard"],[7,43,1,0],[7,44,1,0,"require"],[7,51,1,0],[7,52,1,0,"_dependencyMap"],[7,66,1,0],[8,2,2,0],[8,6,2,0,"_asyncStorage"],[8,19,2,0],[8,22,2,0,"_interopRequireDefault"],[8,44,2,0],[8,45,2,0,"require"],[8,52,2,0],[8,53,2,0,"_dependencyMap"],[8,67,2,0],[9,2,3,0],[9,6,3,0,"_crypto"],[9,13,3,0],[9,16,3,0,"require"],[9,23,3,0],[9,24,3,0,"_dependencyMap"],[9,38,3,0],[10,2,3,38],[10,11,3,38,"_interopRequireWildcard"],[10,35,3,38,"e"],[10,36,3,38],[10,38,3,38,"t"],[10,39,3,38],[10,68,3,38,"WeakMap"],[10,75,3,38],[10,81,3,38,"r"],[10,82,3,38],[10,89,3,38,"WeakMap"],[10,96,3,38],[10,100,3,38,"n"],[10,101,3,38],[10,108,3,38,"WeakMap"],[10,115,3,38],[10,127,3,38,"_interopRequireWildcard"],[10,150,3,38],[10,162,3,38,"_interopRequireWildcard"],[10,163,3,38,"e"],[10,164,3,38],[10,166,3,38,"t"],[10,167,3,38],[10,176,3,38,"t"],[10,177,3,38],[10,181,3,38,"e"],[10,182,3,38],[10,186,3,38,"e"],[10,187,3,38],[10,188,3,38,"__esModule"],[10,198,3,38],[10,207,3,38,"e"],[10,208,3,38],[10,214,3,38,"o"],[10,215,3,38],[10,217,3,38,"i"],[10,218,3,38],[10,220,3,38,"f"],[10,221,3,38],[10,226,3,38,"__proto__"],[10,235,3,38],[10,243,3,38,"default"],[10,250,3,38],[10,252,3,38,"e"],[10,253,3,38],[10,270,3,38,"e"],[10,271,3,38],[10,294,3,38,"e"],[10,295,3,38],[10,320,3,38,"e"],[10,321,3,38],[10,330,3,38,"f"],[10,331,3,38],[10,337,3,38,"o"],[10,338,3,38],[10,341,3,38,"t"],[10,342,3,38],[10,345,3,38,"n"],[10,346,3,38],[10,349,3,38,"r"],[10,350,3,38],[10,358,3,38,"o"],[10,359,3,38],[10,360,3,38,"has"],[10,363,3,38],[10,364,3,38,"e"],[10,365,3,38],[10,375,3,38,"o"],[10,376,3,38],[10,377,3,38,"get"],[10,380,3,38],[10,381,3,38,"e"],[10,382,3,38],[10,385,3,38,"o"],[10,386,3,38],[10,387,3,38,"set"],[10,390,3,38],[10,391,3,38,"e"],[10,392,3,38],[10,394,3,38,"f"],[10,395,3,38],[10,411,3,38,"t"],[10,412,3,38],[10,416,3,38,"e"],[10,417,3,38],[10,433,3,38,"t"],[10,434,3,38],[10,441,3,38,"hasOwnProperty"],[10,455,3,38],[10,456,3,38,"call"],[10,460,3,38],[10,461,3,38,"e"],[10,462,3,38],[10,464,3,38,"t"],[10,465,3,38],[10,472,3,38,"i"],[10,473,3,38],[10,477,3,38,"o"],[10,478,3,38],[10,481,3,38,"Object"],[10,487,3,38],[10,488,3,38,"defineProperty"],[10,502,3,38],[10,507,3,38,"Object"],[10,513,3,38],[10,514,3,38,"getOwnPropertyDescriptor"],[10,538,3,38],[10,539,3,38,"e"],[10,540,3,38],[10,542,3,38,"t"],[10,543,3,38],[10,550,3,38,"i"],[10,551,3,38],[10,552,3,38,"get"],[10,555,3,38],[10,559,3,38,"i"],[10,560,3,38],[10,561,3,38,"set"],[10,564,3,38],[10,568,3,38,"o"],[10,569,3,38],[10,570,3,38,"f"],[10,571,3,38],[10,573,3,38,"t"],[10,574,3,38],[10,576,3,38,"i"],[10,577,3,38],[10,581,3,38,"f"],[10,582,3,38],[10,583,3,38,"t"],[10,584,3,38],[10,588,3,38,"e"],[10,589,3,38],[10,590,3,38,"t"],[10,591,3,38],[10,602,3,38,"f"],[10,603,3,38],[10,608,3,38,"e"],[10,609,3,38],[10,611,3,38,"t"],[10,612,3,38],[11,2,5,0],[12,2,6,0],[14,2,8,7],[14,8,8,13,"AmiXStorage"],[14,19,8,24],[14,20,8,25],[15,4,9,2],[16,4,10,2],[16,11,10,9,"STORAGE_KEYS"],[16,23,10,21],[16,26,10,24],[17,6,11,4],[18,6,12,4,"IDENTITY_KEYS"],[18,19,12,17],[18,21,12,19],[18,41,12,39],[19,6,13,4,"RATCHET_STATES"],[19,20,13,18],[19,22,13,20],[19,43,13,41],[20,6,14,4,"MESSAGES"],[20,14,14,12],[20,16,14,14],[20,31,14,29],[21,6,15,4,"CONTACTS"],[21,14,15,12],[21,16,15,14],[21,31,15,29],[22,6,16,4,"GROUPS"],[22,12,16,10],[22,14,16,12],[22,27,16,25],[23,6,17,4,"ANALYTICS_UUID"],[23,20,17,18],[23,22,17,20],[23,43,17,41],[24,6,18,4,"BACKUP_PASSPHRASE_HASH"],[24,28,18,26],[24,30,18,28],[24,59,18,57],[25,6,20,4],[26,6,21,4,"USER_PREFERENCES"],[26,22,21,20],[26,24,21,22],[26,47,21,45],[27,6,22,4,"UI_STATE"],[27,14,22,12],[27,16,22,14],[27,31,22,29],[28,6,23,4,"CACHE_DATA"],[28,16,23,14],[28,18,23,16],[28,35,23,33],[29,6,24,4,"APP_VERSION"],[29,17,24,15],[29,19,24,17],[30,4,25,2],[30,5,25,3],[32,4,27,2],[33,4,28,2],[33,17,28,15,"initialize"],[33,27,28,25,"initialize"],[33,28,28,25],[33,30,28,28],[34,6,29,4],[34,10,29,8],[35,8,30,6],[35,14,30,12,"appVersion"],[35,24,30,22],[35,27,30,25],[35,33,30,31],[35,37,30,35],[35,38,30,36,"getAppVersion"],[35,51,30,49],[35,52,30,50],[35,53,30,51],[36,8,31,6],[36,14,31,12,"currentVersion"],[36,28,31,26],[36,31,31,29],[36,38,31,36],[36,39,31,37],[36,40,31,38],[38,8,33,6],[38,12,33,10,"appVersion"],[38,22,33,20],[38,27,33,25,"currentVersion"],[38,41,33,39],[38,43,33,41],[39,10,34,8],[39,16,34,14],[39,20,34,18],[39,21,34,19,"performMigration"],[39,37,34,35],[39,38,34,36,"appVersion"],[39,48,34,46],[39,50,34,48,"currentVersion"],[39,64,34,62],[39,65,34,63],[40,10,35,8],[40,16,35,14],[40,20,35,18],[40,21,35,19,"setAppVersion"],[40,34,35,32],[40,35,35,33,"currentVersion"],[40,49,35,47],[40,50,35,48],[41,8,36,6],[42,8,38,6],[42,15,38,13],[42,19,38,17],[43,6,39,4],[43,7,39,5],[43,8,39,6],[43,15,39,13,"error"],[43,20,39,18],[43,22,39,20],[44,8,40,6,"console"],[44,15,40,13],[44,16,40,14,"error"],[44,21,40,19],[44,22,40,20],[44,54,40,52],[44,56,40,54,"error"],[44,61,40,59],[44,62,40,60],[45,8,41,6],[45,15,41,13],[45,20,41,18],[46,6,42,4],[47,4,43,2],[49,4,45,2],[50,4,46,2],[50,17,46,15,"storeSecurely"],[50,30,46,28,"storeSecurely"],[50,31,46,29,"key"],[50,34,46,32],[50,36,46,34,"value"],[50,41,46,39],[50,43,46,41],[51,6,47,4],[51,10,47,8],[52,8,48,6],[52,14,48,12,"encryptedValue"],[52,28,48,26],[52,31,48,29],[52,37,48,35],[52,41,48,39],[52,42,48,40,"encryptForStorage"],[52,59,48,57],[52,60,48,58,"value"],[52,65,48,63],[52,66,48,64],[53,8,49,6],[53,14,49,12,"SecureStore"],[53,25,49,23],[53,26,49,24,"setItemAsync"],[53,38,49,36],[53,39,49,37,"key"],[53,42,49,40],[53,44,49,42,"encryptedValue"],[53,58,49,56],[53,59,49,57],[54,8,50,6],[54,15,50,13],[54,19,50,17],[55,6,51,4],[55,7,51,5],[55,8,51,6],[55,15,51,13,"error"],[55,20,51,18],[55,22,51,20],[56,8,52,6,"console"],[56,15,52,13],[56,16,52,14,"error"],[56,21,52,19],[56,22,52,20],[56,46,52,44],[56,48,52,46,"error"],[56,53,52,51],[56,54,52,52],[57,8,53,6],[57,15,53,13],[57,20,53,18],[58,6,54,4],[59,4,55,2],[60,4,57,2],[60,17,57,15,"getSecurely"],[60,28,57,26,"getSecurely"],[60,29,57,27,"key"],[60,32,57,30],[60,34,57,32],[61,6,58,4],[61,10,58,8],[62,8,59,6],[62,14,59,12,"encryptedValue"],[62,28,59,26],[62,31,59,29],[62,37,59,35,"SecureStore"],[62,48,59,46],[62,49,59,47,"getItemAsync"],[62,61,59,59],[62,62,59,60,"key"],[62,65,59,63],[62,66,59,64],[63,8,60,6],[63,12,60,10],[63,13,60,11,"encryptedValue"],[63,27,60,25],[63,29,60,27],[63,36,60,34],[63,40,60,38],[64,8,62,6],[64,15,62,13],[64,21,62,19],[64,25,62,23],[64,26,62,24,"decryptFromStorage"],[64,44,62,42],[64,45,62,43,"encryptedValue"],[64,59,62,57],[64,60,62,58],[65,6,63,4],[65,7,63,5],[65,8,63,6],[65,15,63,13,"error"],[65,20,63,18],[65,22,63,20],[66,8,64,6,"console"],[66,15,64,13],[66,16,64,14,"error"],[66,21,64,19],[66,22,64,20],[66,48,64,46],[66,50,64,48,"error"],[66,55,64,53],[66,56,64,54],[67,8,65,6],[67,15,65,13],[67,19,65,17],[68,6,66,4],[69,4,67,2],[70,4,69,2],[70,17,69,15,"deleteSecurely"],[70,31,69,29,"deleteSecurely"],[70,32,69,30,"key"],[70,35,69,33],[70,37,69,35],[71,6,70,4],[71,10,70,8],[72,8,71,6],[72,14,71,12,"SecureStore"],[72,25,71,23],[72,26,71,24,"deleteItemAsync"],[72,41,71,39],[72,42,71,40,"key"],[72,45,71,43],[72,46,71,44],[73,8,72,6],[73,15,72,13],[73,19,72,17],[74,6,73,4],[74,7,73,5],[74,8,73,6],[74,15,73,13,"error"],[74,20,73,18],[74,22,73,20],[75,8,74,6,"console"],[75,15,74,13],[75,16,74,14,"error"],[75,21,74,19],[75,22,74,20],[75,47,74,45],[75,49,74,47,"error"],[75,54,74,52],[75,55,74,53],[76,8,75,6],[76,15,75,13],[76,20,75,18],[77,6,76,4],[78,4,77,2],[80,4,79,2],[81,4,80,2],[81,17,80,15,"store"],[81,22,80,20,"store"],[81,23,80,21,"key"],[81,26,80,24],[81,28,80,26,"value"],[81,33,80,31],[81,35,80,33],[82,6,81,4],[82,10,81,8],[83,8,82,6],[83,14,82,12,"AsyncStorage"],[83,35,82,24],[83,36,82,25,"setItem"],[83,43,82,32],[83,44,82,33,"key"],[83,47,82,36],[83,49,82,38,"JSON"],[83,53,82,42],[83,54,82,43,"stringify"],[83,63,82,52],[83,64,82,53,"value"],[83,69,82,58],[83,70,82,59],[83,71,82,60],[84,8,83,6],[84,15,83,13],[84,19,83,17],[85,6,84,4],[85,7,84,5],[85,8,84,6],[85,15,84,13,"error"],[85,20,84,18],[85,22,84,20],[86,8,85,6,"console"],[86,15,85,13],[86,16,85,14,"error"],[86,21,85,19],[86,22,85,20],[86,39,85,37],[86,41,85,39,"error"],[86,46,85,44],[86,47,85,45],[87,8,86,6],[87,15,86,13],[87,20,86,18],[88,6,87,4],[89,4,88,2],[90,4,90,2],[90,17,90,15,"get"],[90,20,90,18,"get"],[90,21,90,19,"key"],[90,24,90,22],[90,26,90,24],[91,6,91,4],[91,10,91,8],[92,8,92,6],[92,14,92,12,"value"],[92,19,92,17],[92,22,92,20],[92,28,92,26,"AsyncStorage"],[92,49,92,38],[92,50,92,39,"getItem"],[92,57,92,46],[92,58,92,47,"key"],[92,61,92,50],[92,62,92,51],[93,8,93,6],[93,15,93,13,"value"],[93,20,93,18],[93,23,93,21,"JSON"],[93,27,93,25],[93,28,93,26,"parse"],[93,33,93,31],[93,34,93,32,"value"],[93,39,93,37],[93,40,93,38],[93,43,93,41],[93,47,93,45],[94,6,94,4],[94,7,94,5],[94,8,94,6],[94,15,94,13,"error"],[94,20,94,18],[94,22,94,20],[95,8,95,6,"console"],[95,15,95,13],[95,16,95,14,"error"],[95,21,95,19],[95,22,95,20],[95,41,95,39],[95,43,95,41,"error"],[95,48,95,46],[95,49,95,47],[96,8,96,6],[96,15,96,13],[96,19,96,17],[97,6,97,4],[98,4,98,2],[99,4,100,2],[99,17,100,15,"delete"],[99,23,100,21,"delete"],[99,24,100,22,"key"],[99,27,100,25],[99,29,100,27],[100,6,101,4],[100,10,101,8],[101,8,102,6],[101,14,102,12,"AsyncStorage"],[101,35,102,24],[101,36,102,25,"removeItem"],[101,46,102,35],[101,47,102,36,"key"],[101,50,102,39],[101,51,102,40],[102,8,103,6],[102,15,103,13],[102,19,103,17],[103,6,104,4],[103,7,104,5],[103,8,104,6],[103,15,104,13,"error"],[103,20,104,18],[103,22,104,20],[104,8,105,6,"console"],[104,15,105,13],[104,16,105,14,"error"],[104,21,105,19],[104,22,105,20],[104,40,105,38],[104,42,105,40,"error"],[104,47,105,45],[104,48,105,46],[105,8,106,6],[105,15,106,13],[105,20,106,18],[106,6,107,4],[107,4,108,2],[109,4,110,2],[110,4,111,2],[110,17,111,15,"encryptForStorage"],[110,34,111,32,"encryptForStorage"],[110,35,111,33,"data"],[110,39,111,37],[110,41,111,39],[111,6,112,4],[111,10,112,8],[112,8,113,6],[113,8,114,6],[113,14,114,12,"storageKey"],[113,24,114,22],[113,27,114,25],[113,33,114,31],[113,37,114,35],[113,38,114,36,"getStorageKey"],[113,51,114,49],[113,52,114,50],[113,53,114,51],[114,8,115,6],[114,14,115,12,"dataString"],[114,24,115,22],[114,27,115,25,"JSON"],[114,31,115,29],[114,32,115,30,"stringify"],[114,41,115,39],[114,42,115,40,"data"],[114,46,115,44],[114,47,115,45],[115,8,116,6],[115,14,116,12,"dataBytes"],[115,23,116,21],[115,26,116,24],[115,30,116,28,"TextEncoder"],[115,41,116,39],[115,42,116,40],[115,43,116,41],[115,44,116,42,"encode"],[115,50,116,48],[115,51,116,49,"dataString"],[115,61,116,59],[115,62,116,60],[117,8,118,6],[118,8,119,6],[118,14,119,12,"nonce"],[118,19,119,17],[118,22,119,20],[118,28,119,26,"AmiXCrypto"],[118,46,119,36],[118,47,119,37,"generateRandomBytes"],[118,66,119,56],[118,67,119,57],[118,69,119,59],[118,70,119,60],[119,8,120,6],[119,14,120,12,"encrypted"],[119,23,120,21],[119,26,120,24],[119,32,120,30,"AmiXCrypto"],[119,50,120,40],[119,51,120,41,"encryptMessage"],[119,65,120,55],[119,66,120,56,"dataString"],[119,76,120,66],[119,78,120,68],[120,10,121,8,"chainKey"],[120,18,121,16],[120,20,121,18,"storageKey"],[121,8,122,6],[121,9,122,7],[121,10,122,8],[122,8,124,6],[122,15,124,13,"JSON"],[122,19,124,17],[122,20,124,18,"stringify"],[122,29,124,27],[122,30,124,28],[123,10,125,8,"encrypted"],[123,19,125,17],[123,21,125,19,"encrypted"],[123,30,125,28],[123,31,125,29,"ciphertext"],[123,41,125,39],[124,10,126,8,"nonce"],[124,15,126,13],[124,17,126,15,"encrypted"],[124,26,126,24],[124,27,126,25,"nonce"],[124,32,126,30],[125,10,127,8,"timestamp"],[125,19,127,17],[125,21,127,19,"Date"],[125,25,127,23],[125,26,127,24,"now"],[125,29,127,27],[125,30,127,28],[126,8,128,6],[126,9,128,7],[126,10,128,8],[127,6,129,4],[127,7,129,5],[127,8,129,6],[127,15,129,13,"error"],[127,20,129,18],[127,22,129,20],[128,8,130,6],[128,14,130,12],[128,18,130,16,"Error"],[128,23,130,21],[128,24,130,22],[128,45,130,43],[128,48,130,46,"error"],[128,53,130,51],[128,54,130,52,"message"],[128,61,130,59],[128,62,130,60],[129,6,131,4],[130,4,132,2],[131,4,134,2],[131,17,134,15,"decryptFromStorage"],[131,35,134,33,"decryptFromStorage"],[131,36,134,34,"encryptedData"],[131,49,134,47],[131,51,134,49],[132,6,135,4],[132,10,135,8],[133,8,136,6],[133,14,136,12,"data"],[133,18,136,16],[133,21,136,19,"JSON"],[133,25,136,23],[133,26,136,24,"parse"],[133,31,136,29],[133,32,136,30,"encryptedData"],[133,45,136,43],[133,46,136,44],[134,8,137,6],[134,14,137,12,"storageKey"],[134,24,137,22],[134,27,137,25],[134,33,137,31],[134,37,137,35],[134,38,137,36,"getStorageKey"],[134,51,137,49],[134,52,137,50],[134,53,137,51],[135,8,139,6],[135,14,139,12,"decrypted"],[135,23,139,21],[135,26,139,24],[135,32,139,30,"AmiXCrypto"],[135,50,139,40],[135,51,139,41,"decryptMessage"],[135,65,139,55],[135,66,139,56],[136,10,140,8,"ciphertext"],[136,20,140,18],[136,22,140,20,"data"],[136,26,140,24],[136,27,140,25,"encrypted"],[136,36,140,34],[137,10,141,8,"nonce"],[137,15,141,13],[137,17,141,15,"data"],[137,21,141,19],[137,22,141,20,"nonce"],[138,8,142,6],[138,9,142,7],[138,11,142,9],[139,10,143,8,"chainKey"],[139,18,143,16],[139,20,143,18,"storageKey"],[140,8,144,6],[140,9,144,7],[140,10,144,8],[141,8,146,6],[141,15,146,13,"JSON"],[141,19,146,17],[141,20,146,18,"parse"],[141,25,146,23],[141,26,146,24,"decrypted"],[141,35,146,33],[141,36,146,34],[142,6,147,4],[142,7,147,5],[142,8,147,6],[142,15,147,13,"error"],[142,20,147,18],[142,22,147,20],[143,8,148,6],[143,14,148,12],[143,18,148,16,"Error"],[143,23,148,21],[143,24,148,22],[143,45,148,43],[143,48,148,46,"error"],[143,53,148,51],[143,54,148,52,"message"],[143,61,148,59],[143,62,148,60],[144,6,149,4],[145,4,150,2],[147,4,152,2],[148,4,153,2],[148,17,153,15,"getStorageKey"],[148,30,153,28,"getStorageKey"],[148,31,153,28],[148,33,153,31],[149,6,154,4],[149,10,154,8],[150,8,155,6],[151,8,156,6],[151,14,156,12,"deviceId"],[151,22,156,20],[151,25,156,23],[151,31,156,29,"SecureStore"],[151,42,156,40],[151,43,156,41,"getItemAsync"],[151,55,156,53],[151,56,156,54],[151,72,156,70],[151,73,156,71],[152,8,157,6],[152,12,157,10],[152,13,157,11,"deviceId"],[152,21,157,19],[152,23,157,21],[153,10,158,8],[153,16,158,14,"newDeviceId"],[153,27,158,25],[153,30,158,28],[153,36,158,34,"AmiXCrypto"],[153,54,158,44],[153,55,158,45,"generateSecureUUID"],[153,73,158,63],[153,74,158,64],[153,75,158,65],[154,10,159,8],[154,16,159,14,"SecureStore"],[154,27,159,25],[154,28,159,26,"setItemAsync"],[154,40,159,38],[154,41,159,39],[154,57,159,55],[154,59,159,57,"newDeviceId"],[154,70,159,68],[154,71,159,69],[155,10,160,8],[155,17,160,15,"newDeviceId"],[155,28,160,26],[156,8,161,6],[157,8,162,6],[157,15,162,13,"deviceId"],[157,23,162,21],[158,6,163,4],[158,7,163,5],[158,8,163,6],[158,15,163,13,"error"],[158,20,163,18],[158,22,163,20],[159,8,164,6],[160,8,165,6],[160,15,165,13],[160,41,165,39],[161,6,166,4],[162,4,167,2],[164,4,169,2],[165,4,170,2],[165,17,170,15,"storeIdentityKeys"],[165,34,170,32,"storeIdentityKeys"],[165,35,170,33,"identityKeys"],[165,47,170,45],[165,49,170,47],[166,6,171,4],[166,13,171,11],[166,19,171,17],[166,23,171,21],[166,24,171,22,"storeSecurely"],[166,37,171,35],[166,38,171,36],[166,42,171,40],[166,43,171,41,"STORAGE_KEYS"],[166,55,171,53],[166,56,171,54,"IDENTITY_KEYS"],[166,69,171,67],[166,71,171,69,"identityKeys"],[166,83,171,81],[166,84,171,82],[167,4,172,2],[168,4,174,2],[168,17,174,15,"getIdentityKeys"],[168,32,174,30,"getIdentityKeys"],[168,33,174,30],[168,35,174,33],[169,6,175,4],[169,13,175,11],[169,19,175,17],[169,23,175,21],[169,24,175,22,"getSecurely"],[169,35,175,33],[169,36,175,34],[169,40,175,38],[169,41,175,39,"STORAGE_KEYS"],[169,53,175,51],[169,54,175,52,"IDENTITY_KEYS"],[169,67,175,65],[169,68,175,66],[170,4,176,2],[171,4,178,2],[171,17,178,15,"storeRatchetState"],[171,34,178,32,"storeRatchetState"],[171,35,178,33,"conversationId"],[171,49,178,47],[171,51,178,49,"ratchetState"],[171,63,178,61],[171,65,178,63],[172,6,179,4],[172,12,179,10,"states"],[172,18,179,16],[172,21,179,19],[172,28,179,25],[172,32,179,29],[172,33,179,30,"getSecurely"],[172,44,179,41],[172,45,179,42],[172,49,179,46],[172,50,179,47,"STORAGE_KEYS"],[172,62,179,59],[172,63,179,60,"RATCHET_STATES"],[172,77,179,74],[172,78,179,75],[172,83,179,79],[172,84,179,80],[172,85,179,81],[173,6,180,4,"states"],[173,12,180,10],[173,13,180,11,"conversationId"],[173,27,180,25],[173,28,180,26],[173,31,180,29,"ratchetState"],[173,43,180,41],[174,6,181,4],[174,13,181,11],[174,19,181,17],[174,23,181,21],[174,24,181,22,"storeSecurely"],[174,37,181,35],[174,38,181,36],[174,42,181,40],[174,43,181,41,"STORAGE_KEYS"],[174,55,181,53],[174,56,181,54,"RATCHET_STATES"],[174,70,181,68],[174,72,181,70,"states"],[174,78,181,76],[174,79,181,77],[175,4,182,2],[176,4,184,2],[176,17,184,15,"getRatchetState"],[176,32,184,30,"getRatchetState"],[176,33,184,31,"conversationId"],[176,47,184,45],[176,49,184,47],[177,6,185,4],[177,12,185,10,"states"],[177,18,185,16],[177,21,185,19],[177,28,185,25],[177,32,185,29],[177,33,185,30,"getSecurely"],[177,44,185,41],[177,45,185,42],[177,49,185,46],[177,50,185,47,"STORAGE_KEYS"],[177,62,185,59],[177,63,185,60,"RATCHET_STATES"],[177,77,185,74],[177,78,185,75],[177,83,185,79],[177,84,185,80],[177,85,185,81],[178,6,186,4],[178,13,186,11,"states"],[178,19,186,17],[178,20,186,18,"conversationId"],[178,34,186,32],[178,35,186,33],[178,39,186,37],[178,43,186,41],[179,4,187,2],[181,4,189,2],[182,4,190,2],[182,17,190,15,"storeMessage"],[182,29,190,27,"storeMessage"],[182,30,190,28,"conversationId"],[182,44,190,42],[182,46,190,44,"message"],[182,53,190,51],[182,55,190,53],[183,6,191,4],[183,12,191,10,"messages"],[183,20,191,18],[183,23,191,21],[183,30,191,27],[183,34,191,31],[183,35,191,32,"getSecurely"],[183,46,191,43],[183,47,191,44],[183,51,191,48],[183,52,191,49,"STORAGE_KEYS"],[183,64,191,61],[183,65,191,62,"MESSAGES"],[183,73,191,70],[183,74,191,71],[183,79,191,75],[183,80,191,76],[183,81,191,77],[184,6,192,4],[184,10,192,8],[184,11,192,9,"messages"],[184,19,192,17],[184,20,192,18,"conversationId"],[184,34,192,32],[184,35,192,33],[184,37,192,35],[185,8,193,6,"messages"],[185,16,193,14],[185,17,193,15,"conversationId"],[185,31,193,29],[185,32,193,30],[185,35,193,33],[185,37,193,35],[186,6,194,4],[187,6,195,4,"messages"],[187,14,195,12],[187,15,195,13,"conversationId"],[187,29,195,27],[187,30,195,28],[187,31,195,29,"push"],[187,35,195,33],[187,36,195,34],[188,8,196,6],[188,11,196,9,"message"],[188,18,196,16],[189,8,197,6,"id"],[189,10,197,8],[189,12,197,10],[189,18,197,16,"AmiXCrypto"],[189,36,197,26],[189,37,197,27,"generateSecureUUID"],[189,55,197,45],[189,56,197,46],[189,57,197,47],[190,8,198,6,"timestamp"],[190,17,198,15],[190,19,198,17,"Date"],[190,23,198,21],[190,24,198,22,"now"],[190,27,198,25],[190,28,198,26],[191,6,199,4],[191,7,199,5],[191,8,199,6],[192,6,200,4],[192,13,200,11],[192,19,200,17],[192,23,200,21],[192,24,200,22,"storeSecurely"],[192,37,200,35],[192,38,200,36],[192,42,200,40],[192,43,200,41,"STORAGE_KEYS"],[192,55,200,53],[192,56,200,54,"MESSAGES"],[192,64,200,62],[192,66,200,64,"messages"],[192,74,200,72],[192,75,200,73],[193,4,201,2],[194,4,203,2],[194,17,203,15,"getMessages"],[194,28,203,26,"getMessages"],[194,29,203,27,"conversationId"],[194,43,203,41],[194,45,203,43,"limit"],[194,50,203,48],[194,53,203,51],[194,55,203,53],[194,57,203,55],[195,6,204,4],[195,12,204,10,"messages"],[195,20,204,18],[195,23,204,21],[195,30,204,27],[195,34,204,31],[195,35,204,32,"getSecurely"],[195,46,204,43],[195,47,204,44],[195,51,204,48],[195,52,204,49,"STORAGE_KEYS"],[195,64,204,61],[195,65,204,62,"MESSAGES"],[195,73,204,70],[195,74,204,71],[195,79,204,75],[195,80,204,76],[195,81,204,77],[196,6,205,4],[196,12,205,10,"conversationMessages"],[196,32,205,30],[196,35,205,33,"messages"],[196,43,205,41],[196,44,205,42,"conversationId"],[196,58,205,56],[196,59,205,57],[196,63,205,61],[196,65,205,63],[197,6,206,4],[197,13,206,11,"conversationMessages"],[197,33,206,31],[197,34,206,32,"slice"],[197,39,206,37],[197,40,206,38],[197,41,206,39,"limit"],[197,46,206,44],[197,47,206,45],[198,4,207,2],[200,4,209,2],[201,4,210,2],[201,17,210,15,"storeContact"],[201,29,210,27,"storeContact"],[201,30,210,28,"contact"],[201,37,210,35],[201,39,210,37],[202,6,211,4],[202,12,211,10,"contacts"],[202,20,211,18],[202,23,211,21],[202,30,211,27],[202,34,211,31],[202,35,211,32,"getSecurely"],[202,46,211,43],[202,47,211,44],[202,51,211,48],[202,52,211,49,"STORAGE_KEYS"],[202,64,211,61],[202,65,211,62,"CONTACTS"],[202,73,211,70],[202,74,211,71],[202,79,211,75],[202,80,211,76],[202,81,211,77],[203,6,212,4,"contacts"],[203,14,212,12],[203,15,212,13,"contact"],[203,22,212,20],[203,23,212,21,"amixId"],[203,29,212,27],[203,30,212,28],[203,33,212,31],[204,8,213,6],[204,11,213,9,"contact"],[204,18,213,16],[205,8,214,6,"updatedAt"],[205,17,214,15],[205,19,214,17,"Date"],[205,23,214,21],[205,24,214,22,"now"],[205,27,214,25],[205,28,214,26],[206,6,215,4],[206,7,215,5],[207,6,216,4],[207,13,216,11],[207,19,216,17],[207,23,216,21],[207,24,216,22,"storeSecurely"],[207,37,216,35],[207,38,216,36],[207,42,216,40],[207,43,216,41,"STORAGE_KEYS"],[207,55,216,53],[207,56,216,54,"CONTACTS"],[207,64,216,62],[207,66,216,64,"contacts"],[207,74,216,72],[207,75,216,73],[208,4,217,2],[209,4,219,2],[209,17,219,15,"getContacts"],[209,28,219,26,"getContacts"],[209,29,219,26],[209,31,219,29],[210,6,220,4],[210,13,220,11],[210,20,220,17],[210,24,220,21],[210,25,220,22,"getSecurely"],[210,36,220,33],[210,37,220,34],[210,41,220,38],[210,42,220,39,"STORAGE_KEYS"],[210,54,220,51],[210,55,220,52,"CONTACTS"],[210,63,220,60],[210,64,220,61],[210,69,220,65],[210,70,220,66],[210,71,220,67],[211,4,221,2],[213,4,223,2],[214,4,224,2],[214,17,224,15,"storeGroup"],[214,27,224,25,"storeGroup"],[214,28,224,26,"group"],[214,33,224,31],[214,35,224,33],[215,6,225,4],[215,12,225,10,"groups"],[215,18,225,16],[215,21,225,19],[215,28,225,25],[215,32,225,29],[215,33,225,30,"getSecurely"],[215,44,225,41],[215,45,225,42],[215,49,225,46],[215,50,225,47,"STORAGE_KEYS"],[215,62,225,59],[215,63,225,60,"GROUPS"],[215,69,225,66],[215,70,225,67],[215,75,225,71],[215,76,225,72],[215,77,225,73],[216,6,226,4,"groups"],[216,12,226,10],[216,13,226,11,"group"],[216,18,226,16],[216,19,226,17,"id"],[216,21,226,19],[216,22,226,20],[216,25,226,23],[217,8,227,6],[217,11,227,9,"group"],[217,16,227,14],[218,8,228,6,"updatedAt"],[218,17,228,15],[218,19,228,17,"Date"],[218,23,228,21],[218,24,228,22,"now"],[218,27,228,25],[218,28,228,26],[219,6,229,4],[219,7,229,5],[220,6,230,4],[220,13,230,11],[220,19,230,17],[220,23,230,21],[220,24,230,22,"storeSecurely"],[220,37,230,35],[220,38,230,36],[220,42,230,40],[220,43,230,41,"STORAGE_KEYS"],[220,55,230,53],[220,56,230,54,"GROUPS"],[220,62,230,60],[220,64,230,62,"groups"],[220,70,230,68],[220,71,230,69],[221,4,231,2],[222,4,233,2],[222,17,233,15,"getGroups"],[222,26,233,24,"getGroups"],[222,27,233,24],[222,29,233,27],[223,6,234,4],[223,13,234,11],[223,20,234,17],[223,24,234,21],[223,25,234,22,"getSecurely"],[223,36,234,33],[223,37,234,34],[223,41,234,38],[223,42,234,39,"STORAGE_KEYS"],[223,54,234,51],[223,55,234,52,"GROUPS"],[223,61,234,58],[223,62,234,59],[223,67,234,63],[223,68,234,64],[223,69,234,65],[224,4,235,2],[226,4,237,2],[227,4,238,2],[227,17,238,15,"createBackup"],[227,29,238,27,"createBackup"],[227,30,238,28,"passphrase"],[227,40,238,38],[227,42,238,40],[228,6,239,4],[228,10,239,8],[229,8,240,6],[230,8,241,6],[230,14,241,12,"passphraseHash"],[230,28,241,26],[230,31,241,29],[230,37,241,35,"AmiXCrypto"],[230,55,241,45],[230,56,241,46,"generateSafetyNumber"],[230,76,241,66],[230,77,241,67,"passphrase"],[230,87,241,77],[230,89,241,79],[230,102,241,92],[230,103,241,93],[232,8,243,6],[233,8,244,6],[233,14,244,12,"backupData"],[233,24,244,22],[233,27,244,25],[234,10,245,8,"identityKeys"],[234,22,245,20],[234,24,245,22],[234,30,245,28],[234,34,245,32],[234,35,245,33,"getIdentityKeys"],[234,50,245,48],[234,51,245,49],[234,52,245,50],[235,10,246,8,"ratchetStates"],[235,23,246,21],[235,25,246,23],[235,31,246,29],[235,35,246,33],[235,36,246,34,"getSecurely"],[235,47,246,45],[235,48,246,46],[235,52,246,50],[235,53,246,51,"STORAGE_KEYS"],[235,65,246,63],[235,66,246,64,"RATCHET_STATES"],[235,80,246,78],[235,81,246,79],[236,10,247,8,"messages"],[236,18,247,16],[236,20,247,18],[236,26,247,24],[236,30,247,28],[236,31,247,29,"getSecurely"],[236,42,247,40],[236,43,247,41],[236,47,247,45],[236,48,247,46,"STORAGE_KEYS"],[236,60,247,58],[236,61,247,59,"MESSAGES"],[236,69,247,67],[236,70,247,68],[237,10,248,8,"contacts"],[237,18,248,16],[237,20,248,18],[237,26,248,24],[237,30,248,28],[237,31,248,29,"getSecurely"],[237,42,248,40],[237,43,248,41],[237,47,248,45],[237,48,248,46,"STORAGE_KEYS"],[237,60,248,58],[237,61,248,59,"CONTACTS"],[237,69,248,67],[237,70,248,68],[238,10,249,8,"groups"],[238,16,249,14],[238,18,249,16],[238,24,249,22],[238,28,249,26],[238,29,249,27,"getSecurely"],[238,40,249,38],[238,41,249,39],[238,45,249,43],[238,46,249,44,"STORAGE_KEYS"],[238,58,249,56],[238,59,249,57,"GROUPS"],[238,65,249,63],[238,66,249,64],[239,10,250,8,"timestamp"],[239,19,250,17],[239,21,250,19,"Date"],[239,25,250,23],[239,26,250,24,"now"],[239,29,250,27],[239,30,250,28],[239,31,250,29],[240,10,251,8,"version"],[240,17,251,15],[240,19,251,17],[241,8,252,6],[241,9,252,7],[243,8,254,6],[244,8,255,6],[244,14,255,12,"backupString"],[244,26,255,24],[244,29,255,27,"JSON"],[244,33,255,31],[244,34,255,32,"stringify"],[244,43,255,41],[244,44,255,42,"backupData"],[244,54,255,52],[244,55,255,53],[245,8,256,6],[245,14,256,12,"backupKey"],[245,23,256,21],[245,26,256,24],[245,32,256,30,"AmiXCrypto"],[245,50,256,40],[245,51,256,41,"deriveKey"],[245,60,256,50],[245,61,257,8],[245,65,257,12,"TextEncoder"],[245,76,257,23],[245,77,257,24],[245,78,257,25],[245,79,257,26,"encode"],[245,85,257,32],[245,86,257,33,"passphrase"],[245,96,257,43],[245,97,257,44],[245,99,258,8],[245,116,259,6],[245,117,259,7],[246,8,261,6],[246,14,261,12,"encryptedBackup"],[246,29,261,27],[246,32,261,30],[246,38,261,36,"AmiXCrypto"],[246,56,261,46],[246,57,261,47,"encryptMessage"],[246,71,261,61],[246,72,261,62,"backupString"],[246,84,261,74],[246,86,261,76],[247,10,262,8,"chainKey"],[247,18,262,16],[247,20,262,18,"AmiXCrypto"],[247,38,262,28],[247,39,262,29,"bytesToHex"],[247,49,262,39],[247,50,262,40,"backupKey"],[247,59,262,49],[248,8,263,6],[248,9,263,7],[248,10,263,8],[250,8,265,6],[251,8,266,6],[251,14,266,12],[251,18,266,16],[251,19,266,17,"storeSecurely"],[251,32,266,30],[251,33,266,31],[251,37,266,35],[251,38,266,36,"STORAGE_KEYS"],[251,50,266,48],[251,51,266,49,"BACKUP_PASSPHRASE_HASH"],[251,73,266,71],[251,75,266,73,"passphraseHash"],[251,89,266,87],[251,90,266,88],[252,8,268,6],[252,15,268,13],[253,10,269,8,"encryptedData"],[253,23,269,21],[253,25,269,23,"encryptedBackup"],[253,40,269,38],[253,41,269,39,"ciphertext"],[253,51,269,49],[254,10,270,8,"nonce"],[254,15,270,13],[254,17,270,15,"encryptedBackup"],[254,32,270,30],[254,33,270,31,"nonce"],[254,38,270,36],[255,10,271,8,"timestamp"],[255,19,271,17],[255,21,271,19,"Date"],[255,25,271,23],[255,26,271,24,"now"],[255,29,271,27],[255,30,271,28],[256,8,272,6],[256,9,272,7],[257,6,273,4],[257,7,273,5],[257,8,273,6],[257,15,273,13,"error"],[257,20,273,18],[257,22,273,20],[258,8,274,6],[258,14,274,12],[258,18,274,16,"Error"],[258,23,274,21],[258,24,274,22],[258,50,274,48],[258,53,274,51,"error"],[258,58,274,56],[258,59,274,57,"message"],[258,66,274,64],[258,67,274,65],[259,6,275,4],[260,4,276,2],[261,4,278,2],[261,17,278,15,"restoreBackup"],[261,30,278,28,"restoreBackup"],[261,31,278,29,"encryptedBackup"],[261,46,278,44],[261,48,278,46,"passphrase"],[261,58,278,56],[261,60,278,58],[262,6,279,4],[262,10,279,8],[263,8,280,6],[264,8,281,6],[264,14,281,12,"storedHash"],[264,24,281,22],[264,27,281,25],[264,33,281,31],[264,37,281,35],[264,38,281,36,"getSecurely"],[264,49,281,47],[264,50,281,48],[264,54,281,52],[264,55,281,53,"STORAGE_KEYS"],[264,67,281,65],[264,68,281,66,"BACKUP_PASSPHRASE_HASH"],[264,90,281,88],[264,91,281,89],[265,8,282,6],[265,14,282,12,"inputHash"],[265,23,282,21],[265,26,282,24],[265,32,282,30,"AmiXCrypto"],[265,50,282,40],[265,51,282,41,"generateSafetyNumber"],[265,71,282,61],[265,72,282,62,"passphrase"],[265,82,282,72],[265,84,282,74],[265,97,282,87],[265,98,282,88],[266,8,284,6],[266,12,284,10,"storedHash"],[266,22,284,20],[266,27,284,25,"inputHash"],[266,36,284,34],[266,38,284,36],[267,10,285,8],[267,16,285,14],[267,20,285,18,"Error"],[267,25,285,23],[267,26,285,24],[267,46,285,44],[267,47,285,45],[268,8,286,6],[270,8,288,6],[271,8,289,6],[271,14,289,12,"backupKey"],[271,23,289,21],[271,26,289,24],[271,32,289,30,"AmiXCrypto"],[271,50,289,40],[271,51,289,41,"deriveKey"],[271,60,289,50],[271,61,290,8],[271,65,290,12,"TextEncoder"],[271,76,290,23],[271,77,290,24],[271,78,290,25],[271,79,290,26,"encode"],[271,85,290,32],[271,86,290,33,"passphrase"],[271,96,290,43],[271,97,290,44],[271,99,291,8],[271,116,292,6],[271,117,292,7],[272,8,294,6],[272,14,294,12,"decryptedBackup"],[272,29,294,27],[272,32,294,30],[272,38,294,36,"AmiXCrypto"],[272,56,294,46],[272,57,294,47,"decryptMessage"],[272,71,294,61],[272,72,294,62],[273,10,295,8,"ciphertext"],[273,20,295,18],[273,22,295,20,"encryptedBackup"],[273,37,295,35],[273,38,295,36,"encryptedData"],[273,51,295,49],[274,10,296,8,"nonce"],[274,15,296,13],[274,17,296,15,"encryptedBackup"],[274,32,296,30],[274,33,296,31,"nonce"],[275,8,297,6],[275,9,297,7],[275,11,297,9],[276,10,298,8,"chainKey"],[276,18,298,16],[276,20,298,18,"AmiXCrypto"],[276,38,298,28],[276,39,298,29,"bytesToHex"],[276,49,298,39],[276,50,298,40,"backupKey"],[276,59,298,49],[277,8,299,6],[277,9,299,7],[277,10,299,8],[278,8,301,6],[278,14,301,12,"backupData"],[278,24,301,22],[278,27,301,25,"JSON"],[278,31,301,29],[278,32,301,30,"parse"],[278,37,301,35],[278,38,301,36,"decryptedBackup"],[278,53,301,51],[278,54,301,52],[280,8,303,6],[281,8,304,6],[281,14,304,12],[281,18,304,16],[281,19,304,17,"storeIdentityKeys"],[281,36,304,34],[281,37,304,35,"backupData"],[281,47,304,45],[281,48,304,46,"identityKeys"],[281,60,304,58],[281,61,304,59],[282,8,305,6],[282,14,305,12],[282,18,305,16],[282,19,305,17,"storeSecurely"],[282,32,305,30],[282,33,305,31],[282,37,305,35],[282,38,305,36,"STORAGE_KEYS"],[282,50,305,48],[282,51,305,49,"RATCHET_STATES"],[282,65,305,63],[282,67,305,65,"backupData"],[282,77,305,75],[282,78,305,76,"ratchetStates"],[282,91,305,89],[282,92,305,90],[283,8,306,6],[283,14,306,12],[283,18,306,16],[283,19,306,17,"storeSecurely"],[283,32,306,30],[283,33,306,31],[283,37,306,35],[283,38,306,36,"STORAGE_KEYS"],[283,50,306,48],[283,51,306,49,"MESSAGES"],[283,59,306,57],[283,61,306,59,"backupData"],[283,71,306,69],[283,72,306,70,"messages"],[283,80,306,78],[283,81,306,79],[284,8,307,6],[284,14,307,12],[284,18,307,16],[284,19,307,17,"storeSecurely"],[284,32,307,30],[284,33,307,31],[284,37,307,35],[284,38,307,36,"STORAGE_KEYS"],[284,50,307,48],[284,51,307,49,"CONTACTS"],[284,59,307,57],[284,61,307,59,"backupData"],[284,71,307,69],[284,72,307,70,"contacts"],[284,80,307,78],[284,81,307,79],[285,8,308,6],[285,14,308,12],[285,18,308,16],[285,19,308,17,"storeSecurely"],[285,32,308,30],[285,33,308,31],[285,37,308,35],[285,38,308,36,"STORAGE_KEYS"],[285,50,308,48],[285,51,308,49,"GROUPS"],[285,57,308,55],[285,59,308,57,"backupData"],[285,69,308,67],[285,70,308,68,"groups"],[285,76,308,74],[285,77,308,75],[286,8,310,6],[286,15,310,13],[286,19,310,17],[287,6,311,4],[287,7,311,5],[287,8,311,6],[287,15,311,13,"error"],[287,20,311,18],[287,22,311,20],[288,8,312,6],[288,14,312,12],[288,18,312,16,"Error"],[288,23,312,21],[288,24,312,22],[288,53,312,51],[288,56,312,54,"error"],[288,61,312,59],[288,62,312,60,"message"],[288,69,312,67],[288,70,312,68],[289,6,313,4],[290,4,314,2],[292,4,316,2],[293,4,317,2],[293,17,317,15,"secureDelete"],[293,29,317,27,"secureDelete"],[293,30,317,27],[293,32,317,30],[294,6,318,4],[294,10,318,8],[295,8,319,6],[296,8,320,6],[296,14,320,12,"keys"],[296,18,320,16],[296,21,320,19,"Object"],[296,27,320,25],[296,28,320,26,"values"],[296,34,320,32],[296,35,320,33],[296,39,320,37],[296,40,320,38,"STORAGE_KEYS"],[296,52,320,50],[296,53,320,51],[297,8,321,6],[297,13,321,11],[297,19,321,17,"key"],[297,22,321,20],[297,26,321,24,"keys"],[297,30,321,28],[297,32,321,30],[298,10,322,8],[298,16,322,14],[298,20,322,18],[298,21,322,19,"deleteSecurely"],[298,35,322,33],[298,36,322,34,"key"],[298,39,322,37],[298,40,322,38],[299,8,323,6],[301,8,325,6],[302,8,326,6],[302,14,326,12,"AsyncStorage"],[302,35,326,24],[302,36,326,25,"clear"],[302,41,326,30],[302,42,326,31],[302,43,326,32],[303,8,328,6],[303,15,328,13],[303,19,328,17],[304,6,329,4],[304,7,329,5],[304,8,329,6],[304,15,329,13,"error"],[304,20,329,18],[304,22,329,20],[305,8,330,6,"console"],[305,15,330,13],[305,16,330,14,"error"],[305,21,330,19],[305,22,330,20],[305,47,330,45],[305,49,330,47,"error"],[305,54,330,52],[305,55,330,53],[306,8,331,6],[306,15,331,13],[306,20,331,18],[307,6,332,4],[308,4,333,2],[310,4,335,2],[311,4,336,2],[311,17,336,15,"performMigration"],[311,33,336,31,"performMigration"],[311,34,336,32,"fromVersion"],[311,45,336,43],[311,47,336,45,"toVersion"],[311,56,336,54],[311,58,336,56],[312,6,337,4],[312,10,337,8],[313,8,338,6,"console"],[313,15,338,13],[313,16,338,14,"log"],[313,19,338,17],[313,20,338,18],[313,38,338,36,"fromVersion"],[313,49,338,47],[313,56,338,54,"toVersion"],[313,65,338,63],[313,67,338,65],[313,68,338,66],[315,8,340,6],[316,8,341,6],[318,8,343,6],[318,15,343,13],[318,19,343,17],[319,6,344,4],[319,7,344,5],[319,8,344,6],[319,15,344,13,"error"],[319,20,344,18],[319,22,344,20],[320,8,345,6,"console"],[320,15,345,13],[320,16,345,14,"error"],[320,21,345,19],[320,22,345,20],[320,41,345,39],[320,43,345,41,"error"],[320,48,345,46],[320,49,345,47],[321,8,346,6],[321,15,346,13],[321,20,346,18],[322,6,347,4],[323,4,348,2],[325,4,350,2],[326,4,351,2],[326,17,351,15,"getAppVersion"],[326,30,351,28,"getAppVersion"],[326,31,351,28],[326,33,351,31],[327,6,352,4],[327,13,352,11],[327,20,352,17],[327,24,352,21],[327,25,352,22,"get"],[327,28,352,25],[327,29,352,26],[327,33,352,30],[327,34,352,31,"STORAGE_KEYS"],[327,46,352,43],[327,47,352,44,"APP_VERSION"],[327,58,352,55],[327,59,352,56],[327,64,352,60],[327,71,352,67],[328,4,353,2],[329,4,355,2],[329,17,355,15,"setAppVersion"],[329,30,355,28,"setAppVersion"],[329,31,355,29,"version"],[329,38,355,36],[329,40,355,38],[330,6,356,4],[330,13,356,11],[330,19,356,17],[330,23,356,21],[330,24,356,22,"store"],[330,29,356,27],[330,30,356,28],[330,34,356,32],[330,35,356,33,"STORAGE_KEYS"],[330,47,356,45],[330,48,356,46,"APP_VERSION"],[330,59,356,57],[330,61,356,59,"version"],[330,68,356,66],[330,69,356,67],[331,4,357,2],[333,4,359,2],[334,4,360,2],[334,17,360,15,"getAllKeys"],[334,27,360,25,"getAllKeys"],[334,28,360,25],[334,30,360,28],[335,6,361,4],[335,10,361,8],[336,8,362,6],[336,15,362,13],[336,21,362,19,"AsyncStorage"],[336,42,362,31],[336,43,362,32,"getAllKeys"],[336,53,362,42],[336,54,362,43],[336,55,362,44],[337,6,363,4],[337,7,363,5],[337,8,363,6],[337,15,363,13,"error"],[337,20,363,18],[337,22,363,20],[338,8,364,6,"console"],[338,15,364,13],[338,16,364,14,"error"],[338,21,364,19],[338,22,364,20],[338,47,364,45],[338,49,364,47,"error"],[338,54,364,52],[338,55,364,53],[339,8,365,6],[339,15,365,13],[339,17,365,15],[340,6,366,4],[341,4,367,2],[342,4,369,2],[342,17,369,15,"getStorageSize"],[342,31,369,29,"getStorageSize"],[342,32,369,29],[342,34,369,32],[343,6,370,4],[343,10,370,8],[344,8,371,6],[344,14,371,12,"keys"],[344,18,371,16],[344,21,371,19],[344,27,371,25],[344,31,371,29],[344,32,371,30,"getAllKeys"],[344,42,371,40],[344,43,371,41],[344,44,371,42],[345,8,372,6],[345,12,372,10,"totalSize"],[345,21,372,19],[345,24,372,22],[345,25,372,23],[346,8,374,6],[346,13,374,11],[346,19,374,17,"key"],[346,22,374,20],[346,26,374,24,"keys"],[346,30,374,28],[346,32,374,30],[347,10,375,8],[347,16,375,14,"value"],[347,21,375,19],[347,24,375,22],[347,30,375,28,"AsyncStorage"],[347,51,375,40],[347,52,375,41,"getItem"],[347,59,375,48],[347,60,375,49,"key"],[347,63,375,52],[347,64,375,53],[348,10,376,8],[348,14,376,12,"value"],[348,19,376,17],[348,21,376,19],[349,12,377,10,"totalSize"],[349,21,377,19],[349,25,377,23,"value"],[349,30,377,28],[349,31,377,29,"length"],[349,37,377,35],[350,10,378,8],[351,8,379,6],[352,8,381,6],[352,15,381,13,"totalSize"],[352,24,381,22],[353,6,382,4],[353,7,382,5],[353,8,382,6],[353,15,382,13,"error"],[353,20,382,18],[353,22,382,20],[354,8,383,6,"console"],[354,15,383,13],[354,16,383,14,"error"],[354,21,383,19],[354,22,383,20],[354,57,383,55],[354,59,383,57,"error"],[354,64,383,62],[354,65,383,63],[355,8,384,6],[355,15,384,13],[355,16,384,14],[356,6,385,4],[357,4,386,2],[358,2,387,0],[359,2,387,1,"exports"],[359,9,387,1],[359,10,387,1,"AmiXStorage"],[359,21,387,1],[359,24,387,1,"AmiXStorage"],[359,35,387,1],[360,0,387,1],[360,3]],"functionMap":{"names":["<global>","AmiXStorage","AmiXStorage.initialize","AmiXStorage.storeSecurely","AmiXStorage.getSecurely","AmiXStorage.deleteSecurely","AmiXStorage.store","AmiXStorage.get","AmiXStorage._delete","AmiXStorage.encryptForStorage","AmiXStorage.decryptFromStorage","AmiXStorage.getStorageKey","AmiXStorage.storeIdentityKeys","AmiXStorage.getIdentityKeys","AmiXStorage.storeRatchetState","AmiXStorage.getRatchetState","AmiXStorage.storeMessage","AmiXStorage.getMessages","AmiXStorage.storeContact","AmiXStorage.getContacts","AmiXStorage.storeGroup","AmiXStorage.getGroups","AmiXStorage.createBackup","AmiXStorage.restoreBackup","AmiXStorage.secureDelete","AmiXStorage.performMigration","AmiXStorage.getAppVersion","AmiXStorage.setAppVersion","AmiXStorage.getAllKeys","AmiXStorage.getStorageSize"],"mappings":"AAA;OCO;ECoB;GDe;EEG;GFS;EGE;GHU;EIE;GJQ;EKG;GLQ;EME;GNQ;EOE;GPQ;EQG;GRqB;ESE;GTgB;EUG;GVc;EWG;GXE;EYE;GZE;EaE;GbI;EcE;GdG;EeG;GfW;EgBE;GhBI;EiBG;GjBO;EkBE;GlBE;EmBG;GnBO;EoBE;GpBE;EqBG;GrBsC;EsBE;GtBoC;EuBG;GvBgB;EwBG;GxBY;EyBG;GzBE;E0BE;G1BE;E2BG;G3BO;E4BE;G5BiB;CDC"}},"type":"js/module"}]}