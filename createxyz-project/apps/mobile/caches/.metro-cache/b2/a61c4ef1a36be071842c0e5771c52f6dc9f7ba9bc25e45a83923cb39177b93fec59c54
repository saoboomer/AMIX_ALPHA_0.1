{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.base64toBlob = base64toBlob;\n  exports.blobToBase64Async = blobToBase64Async;\n  exports.findHtmlInClipboardAsync = findHtmlInClipboardAsync;\n  exports.findImageInClipboardAsync = findImageInClipboardAsync;\n  exports.getImageSizeFromBlobAsync = getImageSizeFromBlobAsync;\n  exports.htmlToPlainText = htmlToPlainText;\n  exports.isClipboardPermissionDeniedAsync = isClipboardPermissionDeniedAsync;\n  /**\n   * Converts base64-encoded data to a `Blob` object.\n   * @see https://stackoverflow.com/a/20151856\n   */\n  function base64toBlob(base64Data, contentType) {\n    contentType = contentType || '';\n    const sliceSize = 1024;\n    const byteCharacters = atob(base64Data);\n    const bytesLength = byteCharacters.length;\n    const slicesCount = Math.ceil(bytesLength / sliceSize);\n    const byteArrays = new Array(slicesCount);\n    for (let sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n      const begin = sliceIndex * sliceSize;\n      const end = Math.min(begin + sliceSize, bytesLength);\n      const bytes = new Array(end - begin);\n      for (let offset = begin, i = 0; offset < end; ++i, ++offset) {\n        bytes[i] = byteCharacters[offset].charCodeAt(0);\n      }\n      byteArrays[sliceIndex] = new Uint8Array(bytes);\n    }\n    // I cannot use `@ts-expect-error` here because some environments consider this correct:\n    // expo-module build - OK,\n    // expo-module test - error\n    // @ts-ignore `Blob` from `lib.dom.d.ts` and the one from `@types/react-native` differ somehow\n    return new Blob(byteArrays, {\n      type: contentType\n    });\n  }\n  /**\n   * Converts blob to base64-encoded string with Data-URL prefix.\n   */\n  function blobToBase64Async(blob) {\n    return new Promise((resolve, _) => {\n      const reader = new FileReader();\n      reader.onloadend = () => resolve(reader.result);\n      reader.readAsDataURL(blob);\n    });\n  }\n  function htmlToPlainText(html) {\n    const tempDivElement = document.createElement('div');\n    tempDivElement.innerHTML = html;\n    return tempDivElement.textContent || tempDivElement.innerText || '';\n  }\n  function getImageSizeFromBlobAsync(blob) {\n    return new Promise((resolve, _) => {\n      const blobUrl = URL.createObjectURL(blob);\n      const img = document.createElement('img');\n      img.src = blobUrl;\n      img.onload = function () {\n        resolve({\n          width: img.width,\n          height: img.height\n        });\n      };\n    });\n  }\n  async function findImageInClipboardAsync(items) {\n    for (const clipboardItem of items) {\n      // first look for png\n      if (clipboardItem.types.some(type => type === 'image/png')) {\n        return await clipboardItem.getType('image/png');\n      }\n      // alternatively, an image might be a jpeg\n      // NOTE: Currently, this is not supported by browsers yet. They only support PNG now\n      if (clipboardItem.types.some(type => type === 'image/jpeg')) {\n        return await clipboardItem.getType('image/jpeg');\n      }\n    }\n    return null;\n  }\n  async function findHtmlInClipboardAsync(items) {\n    for (const clipboardItem of items) {\n      if (clipboardItem.types.some(type => type === 'text/html')) {\n        return await clipboardItem.getType('text/html');\n      }\n    }\n    return null;\n  }\n  async function isClipboardPermissionDeniedAsync() {\n    const queryOpts = {\n      name: 'clipboard-read'\n    };\n    const permissionStatus = await navigator.permissions.query(queryOpts);\n    return permissionStatus.state === 'denied';\n  }\n});","lineCount":97,"map":[[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,2,5,7],[16,11,5,16,"base64toBlob"],[16,23,5,28,"base64toBlob"],[16,24,5,29,"base64Data"],[16,34,5,39],[16,36,5,41,"contentType"],[16,47,5,52],[16,49,5,54],[17,4,6,4,"contentType"],[17,15,6,15],[17,18,6,18,"contentType"],[17,29,6,29],[17,33,6,33],[17,35,6,35],[18,4,7,4],[18,10,7,10,"sliceSize"],[18,19,7,19],[18,22,7,22],[18,26,7,26],[19,4,8,4],[19,10,8,10,"byteCharacters"],[19,24,8,24],[19,27,8,27,"atob"],[19,31,8,31],[19,32,8,32,"base64Data"],[19,42,8,42],[19,43,8,43],[20,4,9,4],[20,10,9,10,"bytesLength"],[20,21,9,21],[20,24,9,24,"byteCharacters"],[20,38,9,38],[20,39,9,39,"length"],[20,45,9,45],[21,4,10,4],[21,10,10,10,"slicesCount"],[21,21,10,21],[21,24,10,24,"Math"],[21,28,10,28],[21,29,10,29,"ceil"],[21,33,10,33],[21,34,10,34,"bytesLength"],[21,45,10,45],[21,48,10,48,"sliceSize"],[21,57,10,57],[21,58,10,58],[22,4,11,4],[22,10,11,10,"byteArrays"],[22,20,11,20],[22,23,11,23],[22,27,11,27,"Array"],[22,32,11,32],[22,33,11,33,"slicesCount"],[22,44,11,44],[22,45,11,45],[23,4,12,4],[23,9,12,9],[23,13,12,13,"sliceIndex"],[23,23,12,23],[23,26,12,26],[23,27,12,27],[23,29,12,29,"sliceIndex"],[23,39,12,39],[23,42,12,42,"slicesCount"],[23,53,12,53],[23,55,12,55],[23,57,12,57,"sliceIndex"],[23,67,12,67],[23,69,12,69],[24,6,13,8],[24,12,13,14,"begin"],[24,17,13,19],[24,20,13,22,"sliceIndex"],[24,30,13,32],[24,33,13,35,"sliceSize"],[24,42,13,44],[25,6,14,8],[25,12,14,14,"end"],[25,15,14,17],[25,18,14,20,"Math"],[25,22,14,24],[25,23,14,25,"min"],[25,26,14,28],[25,27,14,29,"begin"],[25,32,14,34],[25,35,14,37,"sliceSize"],[25,44,14,46],[25,46,14,48,"bytesLength"],[25,57,14,59],[25,58,14,60],[26,6,15,8],[26,12,15,14,"bytes"],[26,17,15,19],[26,20,15,22],[26,24,15,26,"Array"],[26,29,15,31],[26,30,15,32,"end"],[26,33,15,35],[26,36,15,38,"begin"],[26,41,15,43],[26,42,15,44],[27,6,16,8],[27,11,16,13],[27,15,16,17,"offset"],[27,21,16,23],[27,24,16,26,"begin"],[27,29,16,31],[27,31,16,33,"i"],[27,32,16,34],[27,35,16,37],[27,36,16,38],[27,38,16,40,"offset"],[27,44,16,46],[27,47,16,49,"end"],[27,50,16,52],[27,52,16,54],[27,54,16,56,"i"],[27,55,16,57],[27,57,16,59],[27,59,16,61,"offset"],[27,65,16,67],[27,67,16,69],[28,8,17,12,"bytes"],[28,13,17,17],[28,14,17,18,"i"],[28,15,17,19],[28,16,17,20],[28,19,17,23,"byteCharacters"],[28,33,17,37],[28,34,17,38,"offset"],[28,40,17,44],[28,41,17,45],[28,42,17,46,"charCodeAt"],[28,52,17,56],[28,53,17,57],[28,54,17,58],[28,55,17,59],[29,6,18,8],[30,6,19,8,"byteArrays"],[30,16,19,18],[30,17,19,19,"sliceIndex"],[30,27,19,29],[30,28,19,30],[30,31,19,33],[30,35,19,37,"Uint8Array"],[30,45,19,47],[30,46,19,48,"bytes"],[30,51,19,53],[30,52,19,54],[31,4,20,4],[32,4,21,4],[33,4,22,4],[34,4,23,4],[35,4,24,4],[36,4,25,4],[36,11,25,11],[36,15,25,15,"Blob"],[36,19,25,19],[36,20,25,20,"byteArrays"],[36,30,25,30],[36,32,25,32],[37,6,25,34,"type"],[37,10,25,38],[37,12,25,40,"contentType"],[38,4,25,52],[38,5,25,53],[38,6,25,54],[39,2,26,0],[40,2,27,0],[41,0,28,0],[42,0,29,0],[43,2,30,7],[43,11,30,16,"blobToBase64Async"],[43,28,30,33,"blobToBase64Async"],[43,29,30,34,"blob"],[43,33,30,38],[43,35,30,40],[44,4,31,4],[44,11,31,11],[44,15,31,15,"Promise"],[44,22,31,22],[44,23,31,23],[44,24,31,24,"resolve"],[44,31,31,31],[44,33,31,33,"_"],[44,34,31,34],[44,39,31,39],[45,6,32,8],[45,12,32,14,"reader"],[45,18,32,20],[45,21,32,23],[45,25,32,27,"FileReader"],[45,35,32,37],[45,36,32,38],[45,37,32,39],[46,6,33,8,"reader"],[46,12,33,14],[46,13,33,15,"onloadend"],[46,22,33,24],[46,25,33,27],[46,31,33,33,"resolve"],[46,38,33,40],[46,39,33,41,"reader"],[46,45,33,47],[46,46,33,48,"result"],[46,52,33,54],[46,53,33,55],[47,6,34,8,"reader"],[47,12,34,14],[47,13,34,15,"readAsDataURL"],[47,26,34,28],[47,27,34,29,"blob"],[47,31,34,33],[47,32,34,34],[48,4,35,4],[48,5,35,5],[48,6,35,6],[49,2,36,0],[50,2,37,7],[50,11,37,16,"htmlToPlainText"],[50,26,37,31,"htmlToPlainText"],[50,27,37,32,"html"],[50,31,37,36],[50,33,37,38],[51,4,38,4],[51,10,38,10,"tempDivElement"],[51,24,38,24],[51,27,38,27,"document"],[51,35,38,35],[51,36,38,36,"createElement"],[51,49,38,49],[51,50,38,50],[51,55,38,55],[51,56,38,56],[52,4,39,4,"tempDivElement"],[52,18,39,18],[52,19,39,19,"innerHTML"],[52,28,39,28],[52,31,39,31,"html"],[52,35,39,35],[53,4,40,4],[53,11,40,11,"tempDivElement"],[53,25,40,25],[53,26,40,26,"textContent"],[53,37,40,37],[53,41,40,41,"tempDivElement"],[53,55,40,55],[53,56,40,56,"innerText"],[53,65,40,65],[53,69,40,69],[53,71,40,71],[54,2,41,0],[55,2,42,7],[55,11,42,16,"getImageSizeFromBlobAsync"],[55,36,42,41,"getImageSizeFromBlobAsync"],[55,37,42,42,"blob"],[55,41,42,46],[55,43,42,48],[56,4,43,4],[56,11,43,11],[56,15,43,15,"Promise"],[56,22,43,22],[56,23,43,23],[56,24,43,24,"resolve"],[56,31,43,31],[56,33,43,33,"_"],[56,34,43,34],[56,39,43,39],[57,6,44,8],[57,12,44,14,"blobUrl"],[57,19,44,21],[57,22,44,24,"URL"],[57,25,44,27],[57,26,44,28,"createObjectURL"],[57,41,44,43],[57,42,44,44,"blob"],[57,46,44,48],[57,47,44,49],[58,6,45,8],[58,12,45,14,"img"],[58,15,45,17],[58,18,45,20,"document"],[58,26,45,28],[58,27,45,29,"createElement"],[58,40,45,42],[58,41,45,43],[58,46,45,48],[58,47,45,49],[59,6,46,8,"img"],[59,9,46,11],[59,10,46,12,"src"],[59,13,46,15],[59,16,46,18,"blobUrl"],[59,23,46,25],[60,6,47,8,"img"],[60,9,47,11],[60,10,47,12,"onload"],[60,16,47,18],[60,19,47,21],[60,31,47,33],[61,8,48,12,"resolve"],[61,15,48,19],[61,16,48,20],[62,10,48,22,"width"],[62,15,48,27],[62,17,48,29,"img"],[62,20,48,32],[62,21,48,33,"width"],[62,26,48,38],[63,10,48,40,"height"],[63,16,48,46],[63,18,48,48,"img"],[63,21,48,51],[63,22,48,52,"height"],[64,8,48,59],[64,9,48,60],[64,10,48,61],[65,6,49,8],[65,7,49,9],[66,4,50,4],[66,5,50,5],[66,6,50,6],[67,2,51,0],[68,2,52,7],[68,17,52,22,"findImageInClipboardAsync"],[68,42,52,47,"findImageInClipboardAsync"],[68,43,52,48,"items"],[68,48,52,53],[68,50,52,55],[69,4,53,4],[69,9,53,9],[69,15,53,15,"clipboardItem"],[69,28,53,28],[69,32,53,32,"items"],[69,37,53,37],[69,39,53,39],[70,6,54,8],[71,6,55,8],[71,10,55,12,"clipboardItem"],[71,23,55,25],[71,24,55,26,"types"],[71,29,55,31],[71,30,55,32,"some"],[71,34,55,36],[71,35,55,38,"type"],[71,39,55,42],[71,43,55,47,"type"],[71,47,55,51],[71,52,55,56],[71,63,55,67],[71,64,55,68],[71,66,55,70],[72,8,56,12],[72,15,56,19],[72,21,56,25,"clipboardItem"],[72,34,56,38],[72,35,56,39,"getType"],[72,42,56,46],[72,43,56,47],[72,54,56,58],[72,55,56,59],[73,6,57,8],[74,6,58,8],[75,6,59,8],[76,6,60,8],[76,10,60,12,"clipboardItem"],[76,23,60,25],[76,24,60,26,"types"],[76,29,60,31],[76,30,60,32,"some"],[76,34,60,36],[76,35,60,38,"type"],[76,39,60,42],[76,43,60,47,"type"],[76,47,60,51],[76,52,60,56],[76,64,60,68],[76,65,60,69],[76,67,60,71],[77,8,61,12],[77,15,61,19],[77,21,61,25,"clipboardItem"],[77,34,61,38],[77,35,61,39,"getType"],[77,42,61,46],[77,43,61,47],[77,55,61,59],[77,56,61,60],[78,6,62,8],[79,4,63,4],[80,4,64,4],[80,11,64,11],[80,15,64,15],[81,2,65,0],[82,2,66,7],[82,17,66,22,"findHtmlInClipboardAsync"],[82,41,66,46,"findHtmlInClipboardAsync"],[82,42,66,47,"items"],[82,47,66,52],[82,49,66,54],[83,4,67,4],[83,9,67,9],[83,15,67,15,"clipboardItem"],[83,28,67,28],[83,32,67,32,"items"],[83,37,67,37],[83,39,67,39],[84,6,68,8],[84,10,68,12,"clipboardItem"],[84,23,68,25],[84,24,68,26,"types"],[84,29,68,31],[84,30,68,32,"some"],[84,34,68,36],[84,35,68,38,"type"],[84,39,68,42],[84,43,68,47,"type"],[84,47,68,51],[84,52,68,56],[84,63,68,67],[84,64,68,68],[84,66,68,70],[85,8,69,12],[85,15,69,19],[85,21,69,25,"clipboardItem"],[85,34,69,38],[85,35,69,39,"getType"],[85,42,69,46],[85,43,69,47],[85,54,69,58],[85,55,69,59],[86,6,70,8],[87,4,71,4],[88,4,72,4],[88,11,72,11],[88,15,72,15],[89,2,73,0],[90,2,74,7],[90,17,74,22,"isClipboardPermissionDeniedAsync"],[90,49,74,54,"isClipboardPermissionDeniedAsync"],[90,50,74,54],[90,52,74,57],[91,4,75,4],[91,10,75,10,"queryOpts"],[91,19,75,19],[91,22,75,22],[92,6,75,24,"name"],[92,10,75,28],[92,12,75,30],[93,4,75,47],[93,5,75,48],[94,4,76,4],[94,10,76,10,"permissionStatus"],[94,26,76,26],[94,29,76,29],[94,35,76,35,"navigator"],[94,44,76,44],[94,45,76,45,"permissions"],[94,56,76,56],[94,57,76,57,"query"],[94,62,76,62],[94,63,76,63,"queryOpts"],[94,72,76,72],[94,73,76,73],[95,4,77,4],[95,11,77,11,"permissionStatus"],[95,27,77,27],[95,28,77,28,"state"],[95,33,77,33],[95,38,77,38],[95,46,77,46],[96,2,78,0],[97,0,78,1],[97,3]],"functionMap":{"names":["<global>","base64toBlob","blobToBase64Async","Promise$argument_0","reader.onloadend","htmlToPlainText","getImageSizeFromBlobAsync","img.onload","findImageInClipboardAsync","clipboardItem.types.some$argument_0","findHtmlInClipboardAsync","isClipboardPermissionDeniedAsync"],"mappings":"AAA;OCI;CDqB;OEI;uBCC;2BCE,4BD;KDE;CFC;OKC;CLI;OMC;uBHC;qBII;SJE;KGC;CNC;OQC;qCCG,8BD;qCCK,+BD;CRK;OUC;qCDE,8BC;CVK;OWC;CXI"}},"type":"js/module"}]}