{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"./ExpoClipboardPasteButton","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":27},"end":{"line":2,"column":66,"index":93}}],"key":"eN9lJtsTwVKwb1gWXbxxisBeqBM=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ClipboardPasteButton = ClipboardPasteButton;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  var _ExpoClipboardPasteButton = _interopRequireDefault(require(_dependencyMap[2], \"./ExpoClipboardPasteButton\"));\n  var _jsxDevRuntime = require(_dependencyMap[3], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\yahya\\\\Downloads\\\\create-anything\\\\createxyz-project\\\\apps\\\\mobile\\\\node_modules\\\\expo-clipboard\\\\build\\\\ClipboardPasteButton.js\"; // @needsAudit\n  /**\n   * This component displays the `UIPasteControl` button on your screen. This allows pasting from the clipboard without requesting permission from the user.\n   *\n   * You should only attempt to render this if [`Clipboard.isPasteButtonAvailable`](#ispastebuttonavailable)\n   * is `true`. This component will render nothing if it is not available, and you will get\n   * a warning in development mode (`__DEV__ === true`).\n   *\n   * The properties of this component extend from `View`; however, you should not attempt to set\n   * `backgroundColor`, `color` or `borderRadius` with the `style` property. Apple restricts customisation of this view.\n   * Instead, you should use the backgroundColor and foregroundColor properties to set the colors of the button, the cornerStyle property to change the border radius,\n   * and the displayMode property to change the appearance of the icon and label. The word \"Paste\" is not editable and neither is the icon.\n   *\n   * Make sure to attach height and width via the style props as without these styles, the button will\n   * not appear on the screen.\n   *\n   * @see [Apple Documentation](https://developer.apple.com/documentation/uikit/uipastecontrol) for more details.\n   */\n  function ClipboardPasteButton({\n    onPress,\n    ...restProps\n  }) {\n    if (!_ExpoClipboardPasteButton.default) {\n      if (__DEV__) {\n        console.warn(\"'ApplePasteButton' is not available.\");\n      }\n      return null;\n    }\n    const onPastePressed = ({\n      nativeEvent\n    }) => {\n      onPress(nativeEvent);\n    };\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_ExpoClipboardPasteButton.default, {\n      onPastePressed: onPastePressed,\n      ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"_interopRequireDefault"],[7,37,1,0],[7,38,1,0,"require"],[7,45,1,0],[7,46,1,0,"_dependencyMap"],[7,60,1,0],[8,2,2,0],[8,6,2,0,"_ExpoClipboardPasteButton"],[8,31,2,0],[8,34,2,0,"_interopRequireDefault"],[8,56,2,0],[8,57,2,0,"require"],[8,64,2,0],[8,65,2,0,"_dependencyMap"],[8,79,2,0],[9,2,2,66],[9,6,2,66,"_jsxDevRuntime"],[9,20,2,66],[9,23,2,66,"require"],[9,30,2,66],[9,31,2,66,"_dependencyMap"],[9,45,2,66],[10,2,2,66],[10,6,2,66,"_jsxFileName"],[10,18,2,66],[10,164,3,0],[11,2,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,2,21,7],[28,11,21,16,"ClipboardPasteButton"],[28,31,21,36,"ClipboardPasteButton"],[28,32,21,37],[29,4,21,39,"onPress"],[29,11,21,46],[30,4,21,48],[30,7,21,51,"restProps"],[31,2,21,61],[31,3,21,62],[31,5,21,64],[32,4,22,4],[32,8,22,8],[32,9,22,9,"ExpoClipboardPasteButton"],[32,42,22,33],[32,44,22,35],[33,6,23,8],[33,10,23,12,"__DEV__"],[33,17,23,19],[33,19,23,21],[34,8,24,12,"console"],[34,15,24,19],[34,16,24,20,"warn"],[34,20,24,24],[34,21,24,25],[34,59,24,63],[34,60,24,64],[35,6,25,8],[36,6,26,8],[36,13,26,15],[36,17,26,19],[37,4,27,4],[38,4,28,4],[38,10,28,10,"onPastePressed"],[38,24,28,24],[38,27,28,27,"onPastePressed"],[38,28,28,28],[39,6,28,30,"nativeEvent"],[40,4,28,42],[40,5,28,43],[40,10,28,48],[41,6,29,8,"onPress"],[41,13,29,15],[41,14,29,16,"nativeEvent"],[41,25,29,27],[41,26,29,28],[42,4,30,4],[42,5,30,5],[43,4,31,4],[43,24,31,11],[43,28,31,11,"_jsxDevRuntime"],[43,42,31,11],[43,43,31,11,"jsxDEV"],[43,49,31,11],[43,51,31,12,"_ExpoClipboardPasteButton"],[43,76,31,12],[43,77,31,12,"default"],[43,84,31,36],[44,6,31,37,"onPastePressed"],[44,20,31,51],[44,22,31,53,"onPastePressed"],[44,36,31,68],[45,6,31,68],[45,9,31,73,"restProps"],[46,4,31,82],[47,6,31,82,"fileName"],[47,14,31,82],[47,16,31,82,"_jsxFileName"],[47,28,31,82],[48,6,31,82,"lineNumber"],[48,16,31,82],[49,6,31,82,"columnNumber"],[49,18,31,82],[50,4,31,82],[50,11,31,84],[50,12,31,85],[51,2,32,0],[52,0,32,1],[52,3]],"functionMap":{"names":["<global>","ClipboardPasteButton","onPastePressed"],"mappings":"AAA;OCoB;2BCO;KDE;CDE"}},"type":"js/module"}]}